Filename: /var/www/zerowastewagon/example-app/app/Console/Kernel.php
Contents:
<?php

namespace App\Console;

use Illuminate\Console\Scheduling\Schedule;
use Illuminate\Foundation\Console\Kernel as ConsoleKernel;

class Kernel extends ConsoleKernel
{
    protected $commands = [
        \App\Console\Commands\ExpireOrders::class,  // Register the ExpireOrders command
    ];

    protected function schedule(Schedule $schedule)
    {
        // Schedule the command to run every 10 minutes
        $schedule->command('expire:orders')->everyTenMinutes();
    }

    protected function commands()
    {
        $this->load(__DIR__.'/Commands');
        require base_path('routes/console.php');
    }
}

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/app/Console/Commands/ExpireOrders.php
Contents:
<?php

namespace App\Console\Commands;

use Illuminate\Console\Command;
use App\Models\ActiveOrder;
use Illuminate\Support\Facades\Log;

class ExpireOrders extends Command
{
    protected $signature = 'expire:orders';
    protected $description = 'Expire orders that have not been paid within 10 minutes';

    public function handle()
    {
        $expiredOrders = ActiveOrder::where('paid', false)
                                    ->where('created_at', '<', now()->subMinutes(10))
                                    ->get();

        foreach ($expiredOrders as $order) {
            $order->offer->increment('quantity', $order->quantity);
            $order->delete();
        }

        Log::info("Processed " . $expiredOrders->count() . " expired orders.");
        $this->info('Expired orders processed: ' . $expiredOrders->count());
    }
}

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/app/Console/Commands/GeocodeVenues.php
Contents:
<?php

namespace App\Console\Commands;

use Illuminate\Console\Command;
use App\Models\Partner;

class GeocodeVenues extends Command
{
    protected $signature = 'geocode:venues';
    protected $description = 'Geocode venues using Nominatim';

    public function handle()
    {
        $partners = Partner::whereNull('latitude')->orWhereNull('longitude')->get();

        foreach ($partners as $partner) {
            $location = $this->geocodeAddress($partner->address);
            if ($location) {
                $partner->latitude = $location['lat'];
                $partner->longitude = $location['lon'];
                $partner->save();
                $this->info("Updated {$partner->venue_name} with lat {$location['lat']} and lon {$location['lon']}");
            } else {
                $this->error("Failed to geocode {$partner->venue_name}");
            }
        }
    }

    private function geocodeAddress($address)
    {
        $url = "https://nominatim.openstreetmap.org/search?format=json&limit=1&q=" . urlencode($address);
        $context = stream_context_create(['http' => ['header' => "User-Agent: tadas.joksas126@gmail.com"]]);
        $response = file_get_contents($url, false, $context);
        $data = json_decode($response, true);
        return $data[0] ?? false;
    }
}

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/app/Providers/AppServiceProvider.php
Contents:
<?php

namespace App\Providers;

use Illuminate\Support\ServiceProvider;
use App\Services\GeocodingService;

class AppServiceProvider extends ServiceProvider
{
    /**
     * Register services.
     *
     * @return void
     */
    public function register()
    {
        $this->app->singleton(GeocodingService::class, function ($app) {
            return new GeocodingService();
        });
    }

    /**
     * Bootstrap any application services.
     *
     * @return void
     */
    public function boot()
    {
        //
    }
}

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/app/Http/Kernel.php
Contents:
<?php

namespace App\Http;

use Illuminate\Foundation\Http\Kernel as HttpKernel;

class Kernel extends HttpKernel
{
    /**
     * The application's global HTTP middleware stack.
     *
     * These middleware are run during every request to your application.
     *
     * @var array
     */
    protected $middleware = [
        \Illuminate\Foundation\Http\Middleware\CheckForMaintenanceMode::class,
        \Illuminate\Foundation\Http\Middleware\ValidatePostSize::class,
        \App\Http\Middleware\TrimStrings::class,
        \Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull::class,
    ];

    /**
     * The application's route middleware groups.
     *
     * @var array
     */
    protected $middlewareGroups = [
        'web' => [
            \App\Http\Middleware\EncryptCookies::class,
            \Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse::class,
            \Illuminate\Session\Middleware\StartSession::class,
            // \Illuminate\Session\Middleware\AuthenticateSession::class,
            \Illuminate\View\Middleware\ShareErrorsFromSession::class,
            \App\Http\Middleware\VerifyCsrfToken::class,
            \Illuminate\Routing\Middleware\SubstituteBindings::class,
        ],

        'api' => [
            'throttle:60,1',
            'bindings',
        ],
    ];

    /**
     * The application's route middleware.
     *
     * These middleware may be assigned to groups or used individually.
     *
     * @var array
     */
    protected $routeMiddleware = [
        'auth' => \Illuminate\Auth\Middleware\Authenticate::class,
        'auth.basic' => \Illuminate\Auth\Middleware\AuthenticateWithBasicAuth::class,
        'bindings' => \Illuminate\Routing\Middleware\SubstituteBindings::class,
        'can' => \Illuminate\Auth\Middleware\Authorize::class,
        'guest' => \App\Http\Middleware\RedirectIfAuthenticated::class,
        'throttle' => \Illuminate\Routing\Middleware\ThrottleRequests::class,
        'set_locale' => \App\Http\Middleware\SetLocale::class,
    ];
}
----------------------------------------
Filename: /var/www/zerowastewagon/example-app/app/Http/Controllers/UserOrderController.php
Contents:
<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use App\Models\HistoryOfOrder;

class UserOrderController extends Controller
{
    public function index()
    {
        $userId = Auth::id(); // Get the currently authenticated user's ID

        // Retrieve all orders for the user from history_of_orders
        $orders = HistoryOfOrder::with('offer')
            ->where('user_id', $userId)
            ->get();

            return view('order_history', compact('orders')); // Update view path
    }
}

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/app/Http/Controllers/FoodOfferController.php
Contents:
<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Models\FoodOffer;
use App\Models\Partner;
use Illuminate\Support\Facades\Auth;
use Illuminate\Routing\Controller;
use Illuminate\Support\Facades\Storage;

class FoodOfferController extends Controller
{
    public function create()
    {
        return view('create_offer');
    }

    public function store(Request $request)
    {
        $request->validate([
            'name' => 'required|string|max:255',
            'description' => 'required|string|max:1000',
            'price' => 'required|numeric|max:255',
            'quantity' => 'required|integer|max:255',
            'image' => 'required|image|mimes:jpeg,png,jpg,gif,svg|max:2048',
            'cuisine_type' => 'nullable|string|max:255',
            'caloric_content' => 'nullable|integer|max:5000',
            'dietary_restrictions' => 'nullable|array',
            'dietary_restrictions.*' => 'string|max:255'
        ]);

        try {
            $imagePath = $request->file('image')->store('offer_images', 'public');
            $offer = new FoodOffer([
                'partner_id' => Auth::guard('partner')->user()->id,
                'name' => $request->name,
                'description' => $request->description,
                'price' => $request->price,
                'quantity' => $request->quantity,
                'image_path' => $imagePath,
                'dietary_restrictions' => json_encode($request->dietary_restrictions),
                'cuisine_type' => $request->cuisine_type,
                'caloric_content' => $request->caloric_content,
            ]);
            $offer->save();

            return redirect()->route('partner.dashboard')->with('success', 'Offer created successfully.');
        } catch (\Exception $e) {
            \Log::error('Error creating offer:', ['error' => $e->getMessage()]);
            return back()->withErrors('Failed to create offer: ' . $e->getMessage())->withInput();
        }
    }

    public function allData() {
        $venues = Partner::with(['offers' => function ($query) {
            $query->where('quantity', '>', 0); // Only fetch offers that are available
        }])->get();

        return response()->json($venues);
    }

    public function venuesList()
    {
        return view('user_list_of_venues', ['data' => Partner::all()]);
    }

    public function list()
    {
        return view('user_list_of_offers');
    }

    public function getFoodOffersByPartner(Partner $id)
    {
        $foodOffers = FoodOffer::where('partner_id', $id->id)->get();

        return view('user_list_of_offers', ['data' => $foodOffers]);
    }

    public function dashboard(Request $request)
    {
        $venues = Partner::with(['offers' => function($query) {
            $query->where('quantity', '>', 0); // Filter offers to only include those available
        }])
        ->has('offers') // Ensure the venue has at least one offer
        ->get();

        $dietaryOptions = [
            'Vegan',
            'Vegetarian',
            'Gluten-Free',
            'Nut-Free',
            'Dairy-Free'
        ];
        if ($request->ajax()) {
            return response()->json($venues);
        }

        return view('user_dashboard', compact('venues', 'dietaryOptions'));
    }

        public function index()
    {
        $partnerId = Auth::guard('partner')->user()->id;
        $publishedOffers = FoodOffer::where('partner_id', $partnerId)->where('quantity', '>', 0)->get();
        $unpublishedOffers = FoodOffer::where('partner_id', $partnerId)->where('quantity', '=', 0)->get();

        return view('partner_list_offers', compact('publishedOffers', 'unpublishedOffers'));
    }

    public function edit(FoodOffer $offer)
    {
        return view('partner_update_offers', compact('offer'));
    }

    public function update(Request $request, FoodOffer $offer)
    {
        $validated = $request->validate([
            'name' => 'required|string|max:255',
            'description' => 'required|string|max:1000',
            'price' => 'required|numeric|max:255',
            'quantity' => 'required|integer|max:255',
            'image' => 'sometimes|image|mimes:jpeg,png,jpg,gif,svg|max:2048',
            'cuisine_type' => 'nullable|string|max:255',
            'caloric_content' => 'nullable|integer|max:5000',
            'dietary_restrictions' => 'nullable|array',
            'dietary_restrictions.*' => 'string|max:255',
        ]);

        $data = $request->except(['image', '_token', '_method']);

        if ($request->hasFile('image')) {
            if ($offer->image_path && Storage::exists('public/' . $offer->image_path)) {
                Storage::delete('public/' . $offer->image_path);
            }

            $imagePath = $request->file('image')->store('offer_images', 'public');
            $data['image_path'] = $imagePath;
        }

        if (isset($data['dietary_restrictions'])) {
            $data['dietary_restrictions'] = json_encode($data['dietary_restrictions']);
        }

        $offer->update($data);
        return redirect()->route('offers.index')->with('success', 'Offer updated successfully.');
    }

    public function destroy(FoodOffer $offer)
    {
        // No need to delete offers, they will be unpublished
        return redirect()->route('offers.index')->with('success', 'Offer deleted successfully.');
    }

    public function unpublish(FoodOffer $offer)
    {
        $offer->update(['quantity' => 0]);
        return redirect()->route('offers.index')->with('success', 'Offer unpublished successfully.');
    }

    public function publish(Request $request, FoodOffer $offer)
    {
        $request->validate([
            'quantity' => 'required|integer|min:1'
        ]);

        $offer->update(['quantity' => $request->quantity]);
        return redirect()->route('offers.index')->with('success', 'Offer published successfully.');
    }
    

    public function getLatestOffers()
    {
        $offers = FoodOffer::where('quantity', '>', 0)->get();
        return response()->json($offers);
    }
}

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/app/Http/Controllers/OrderController.php
Contents:
<?php

namespace App\Http\Controllers;
use App\Models\HistoryOfOrder;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;

use App\Models\Partner;
use App\Models\User;

class OrderController extends Controller
{
    public function index()
{
    // Assuming a Partner is logged in and their relationship with offers is set up correctly
    $partner = Auth::guard('partner')->user();
    $orders = HistoryOfOrder::whereHas('offer', function ($query) use ($partner) {
        $query->where('partner_id', $partner->id);
    })->with(['user', 'offer'])->get();

    return view('partners.orders', compact('orders'));
}
}

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/app/Http/Controllers/Controller.php
Contents:
<?php

namespace App\Http\Controllers;

abstract class Controller
{
    //
}

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/app/Http/Controllers/Auth/PartnerAuthController.php
Contents:
<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;

class PartnerAuthController extends Controller
{
    // Show the partner login form
    public function showLoginForm()
    {
        return view('partner_login');
    }

    // Handle login request for partners
    public function login(Request $request)
{
    $credentials = $request->validate([
        'email' => 'required|email',
        'password' => 'required',
    ]);

    // Attempt to log in the partner
    if (Auth::guard('partner')->attempt($credentials, $request->filled('remember'))) {
        $request->session()->regenerate();

        // Ensure the partner is really authenticated
        if (!Auth::guard('partner')->check()) {
            return back()->withErrors([
                'email' => 'Authentication failed, please try again.',
            ])->withInput($request->except('password'));
        }

        return redirect()->intended('/partner/dashboard');
    }

    return back()->withErrors([
        'email' => 'The provided credentials do not match our records.',
    ])->withInput($request->except('password'));
}
}


----------------------------------------
Filename: /var/www/zerowastewagon/example-app/app/Http/Controllers/Auth/LoginController.php
Contents:
<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use App\Models\User;
use Illuminate\Support\Facades\Hash;

class LoginController extends Controller
{
    public function create()
    {
        return view('auth.login');
    }

    public function finish()
    {
        return view('user_dashboard');
    }

    public function store(Request $request)
    {
        //register logic

        $request->validate([
            'email' => 'required|string|email|max:40',
            'password' => 'required|string|max:40'
        ]);

        if(Auth::attempt($request->only('email', 'password')))
        {
            return redirect()->route('dashboard');
        }

        // Auth::login($user);
        // Session::forget(['name', 'email', 'password']);

        return back()
            ->withInput()
            ->withErrors([
                'email' => 'This credentianls do not match our records.'
            ]);
    }
}

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/app/Http/Controllers/Auth/RegisterController.php
Contents:
<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use App\Models\User;
use Illuminate\Support\Facades\Hash;

class RegisterController extends Controller
{
    public function create()
    {
        return view('auth.register');
    }

    public function store(Request $request)
    {
        //register logic

        $request->validate([
            'name' => 'required|string|max:15',
            'email' => 'required|string|email|unique:users|max:40',
            'password' => 'required|confirmed|min:6|max:40'
        ]);

        $user = User::create([
            'name' => $request->name,
            'email' => $request->email, 
            'password' => Hash::make($request->password)
        ]);

        // Auth::login($user);
        // Session::forget(['name', 'email', 'password']);

        return redirect('/')->with('success', 'Partner registration successful.');
    }
}



----------------------------------------
Filename: /var/www/zerowastewagon/example-app/app/Http/Controllers/GoogleTranslateController.php
Contents:
<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use Illuminate\Support\Facades\App;
use Session;

class GoogleTranslateController extends Controller
{
    public function changeLocale($locale)
    {
        session(['locale' => $locale]);
        App::setLocale($locale);
        $currentLocale = App::getLocale();
        // dd($currentLocale);
        return redirect()->back();
    }
}

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/app/Http/Controllers/PaymentController.php
Contents:
<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use Stripe\Stripe;
use Stripe\Checkout\Session as StripeSession;
use App\Models\ActiveOrder;
use App\Models\HistoryOfOrder; 
use Illuminate\Support\Facades\Auth;
use Log;

class PaymentController extends Controller
{
        public function createCheckoutSession(Request $request)
    {
        Stripe::setApiKey(config('services.stripe.secret'));

        $session = \Stripe\Checkout\Session::create([
            'payment_method_types' => ['card'],
            'line_items' => [[
                'price_data' => [
                    'currency' => 'eur',
                    'product_data' => [
                        'name' => 'Total Cart Value',
                    ],
                    'unit_amount' => $request->total * 100, 
                ],
                'quantity' => 1,
            ]],
            'mode' => 'payment',
            'success_url' => route('payment.success'),
            'cancel_url' => route('payment.cancel'),
        ]);

        return response()->json(['id' => $session->id]);
    }


    public function success(Request $request)
    {
        $user = Auth::user();

        // Retrieve all active orders for the user
        $activeOrders = ActiveOrder::where('user_id', $user->id)->get();

        foreach ($activeOrders as $activeOrder) {
            // Copy active orders to history of orders
            HistoryOfOrder::create([
                'user_id' => $activeOrder->user_id,
                'offer_id' => $activeOrder->offer_id,
                'quantity' => $activeOrder->quantity,
                'paid' => true
            ]);

            // Update ActiveOrder as paid
            $activeOrder->update(['paid' => true]);

            
             $activeOrder->delete();
        }

        // Redirect to a success page
        return view('success', ['message' => 'Thank you for your purchase! Your order has been processed successfully.']);
    }

    public function cancel()
    {
        return view('cancel');
    }
}

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/app/Http/Controllers/PartnerController.php
Contents:
<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Models\Invitation;
use App\Models\Partner;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Facades\Session;
use App\Services\GeocodingService;
use App\Models\HistoryOfOrder;
use Illuminate\Support\Facades\Auth;
use Illuminate\Validation\ValidationException;
use App\Models\PickupTime;

class PartnerController extends Controller
{
    /**
     * Display the initial form for registration, where partners input their invitation code.
     */
    public function showStep1Form()
    {
        return view('step1-partner-registration');
    }

    /**
     * Process the invitation code submitted by the partner.
     * Validate the existence and unused status of the code in the database.
     * Mark the invitation as used and store the invitation code in the session.
     * Redirect to the next registration step.
     */
    public function validateInvitation(Request $request)
    {
        $request->validate([
            'invitation_code' => 'required|exists:invitations,invitation_code,used,false'
        ], [
            'invitation_code.required' => 'The invitation code is required to proceed.',
            'invitation_code.exists' => 'The provided invitation code is invalid or has already been used.'
        ]);

        $invitation = Invitation::where('invitation_code', $request->invitation_code)->first();
        $invitation->used = true;
        $invitation->save();

        session(['invitation_code' => $request->invitation_code]);

        return redirect()->route('partner.registration.step2');
    }

    /**
     * Show the form for venue information input.
     * Check if the invitation code is stored in the session.
     */
    public function showStep2Form()
    {
        if (!session()->has('invitation_code')) {
            return redirect()->route('partner.registration.step1')->with('error', 'Invitation code is required.');
        }
        return view('step2-partner-registration');
    }

    /**
     * Validate and store venue information in the session.
     * Redirect to the next step for finalizing registration details.
     */
    public function registerStep2(Request $request)
    {
        $validatedData = $request->validate([
            'venue_country' => 'required|string|max:255',
            'venue_city' => 'required|string|max:255',
            'venue_name' => 'required|string|max:255',
            'venue_type' => 'nullable|string|max:255',
        ]);

        session($validatedData);

        return redirect()->route('partner.registration.step3');
    }

    /**
     * Display the final form to collect contact information.
     * Ensure that venue information has been properly set in the session.
     */
    public function showStep3Form()
    {
        if (!session()->has('venue_name')) {
            return redirect()->route('partner.registration.step2')->with('error', 'Venue information is required.');
        }
        return view('step3-partner-registration');
    }

    /**
     * Finalize the registration by validating contact information.
     * Attempt to geocode the venue address.
     * Create the partner record in the database.
     * Clear session variables related to the registration process.
     * Redirect to the home page with a success message.
     */
    public function registerStep3(Request $request, GeocodingService $geocodingService)
    {
        $validatedData = $request->validate([
            'website' => 'nullable|url|max:255',
            'address' => 'required|string|max:255',
            'venue_phone_number' => 'required|string|max:255',
            'email' => 'required|string|email|max:255|unique:partners',
            'password' => 'required|string|min:6|confirmed',
        ]);

        $location = $geocodingService->geocodeAddress($validatedData['address']);

        if (!$location) {
            return back()->withErrors('Failed to geocode address. Please check and try again.');
        }

        Partner::create([
            'venue_type' => session('venue_type'),
            'venue_name' => session('venue_name'),
            'address' => $validatedData['address'],
            'latitude' => $location['lat'], // Save latitude
            'longitude' => $location['lon'], // Save longitude
            'website' => $validatedData['website'],
            'venue_phone_number' => $validatedData['venue_phone_number'],
            'venue_city' => session('venue_city'),
            'venue_country' => session('venue_country'),
            'email' => $validatedData['email'],
            'password' => Hash::make($validatedData['password']),
        ]);

        // Clear session data related to registration
        Session::forget(['invitation_code', 'venue_type', 'venue_name', 'venue_city', 'venue_country']);

        return redirect('/')->with('success', 'Partner registration successful and location geocoded.');
    }
        
        public function viewOrders()
    {
        $partnerId = auth()->user()->id; 

        $orders = HistoryOfOrder::whereHas('offer', function ($query) use ($partnerId) {
            $query->where('partner_id', $partnerId);
        })->with(['user', 'offer'])->get();

        return view('orders', compact('orders'));
    }

    public function account()
    {
        $partner = Auth::guard('partner')->user();
        $pickupTimes = $partner->pickupTimes()->get()->keyBy('day_of_week');
        return view('partner_account', compact('partner', 'pickupTimes'));
    }

    public function updatePassword(Request $request)
    {
        $request->validate([
            'current_password' => 'required',
            'new_password' => 'required|min:8|confirmed',
        ]);

        $partner = Auth::guard('partner')->user();

        if (!Hash::check($request->current_password, $partner->password)) {
            throw ValidationException::withMessages([
                'current_password' => 'The provided password does not match your current password.',
            ]);
        }

        $partner->password = Hash::make($request->new_password);
        $partner->save();

        return redirect()->route('partner.account')->with('success', 'Password updated successfully.');
    }

    public function updateAccountInfo(Request $request, GeocodingService $geocodingService)
    {
        $partner = Auth::guard('partner')->user();

        $request->validate([
            'venue_name' => 'required|string|max:255',
            'venue_phone_number' => 'required|string|max:255',
            'venue_city' => 'required|string|max:255',
            'venue_country' => 'required|string|max:255',
            'address' => 'required|string|max:255',
        ]);

        // Geocode the address
        $location = $geocodingService->geocodeAddress($request->address);

        if (!$location) {
            return back()->withErrors('Failed to geocode address. Please check and try again.');
        }

        $partner->venue_name = $request->venue_name;
        $partner->venue_phone_number = $request->venue_phone_number;
        $partner->venue_city = $request->venue_city;
        $partner->venue_country = $request->venue_country;
        $partner->address = $request->address;
        $partner->latitude = $location['lat'];
        $partner->longitude = $location['lon'];
        $partner->save();

        return redirect()->route('partner.account')->with('success', 'Account information updated successfully.');
    }
    

    public function updatePickupTimes(Request $request)
    {
        $partner = Auth::guard('partner')->user();
        $pickupTimesData = $request->input('pickup_times', []);

        foreach ($pickupTimesData as $day => $times) {
            $partner->pickupTimes()->updateOrCreate(
                ['day_of_week' => $day],
                ['start_time' => $times['start_time'], 'end_time' => $times['end_time']]
            );
        }

        return redirect()->route('partner.account')->with('success', 'Pickup times updated successfully.');
    }

    public function getPickupTimesForToday() {
        $today = now()->format('l'); // Get today's day of the week (e.g., 'Monday')
        $pickupTimes = PickupTime::where('day_of_week', $today)->with('partner')->get();
        return response()->json($pickupTimes);
    }
    
    
}

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/app/Http/Controllers/UserController.php
Contents:
<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Models\User;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Facades\Validator;

class UserController extends Controller
{
    public function showRegistrationForm()
    {
        return view('auth.register');
    }

    public function store(Request $request)
    {
        $rules = [
            'name' => 'required|string|max:255',
            'email' => 'required|string|email|max:255|unique:users',
            'password' => 'required|string|min:8|confirmed',
        ];

        $messages = [
            'name.required' => 'Your name is required.',
            'email.required' => 'An email address is required.',
            'email.email' => 'You must enter a valid email address.',
            'email.unique' => 'This email is already registered.',
            'password.required' => 'A password is required.',
            'password.min' => 'The password must be at least 8 characters.',
            'password.confirmed' => 'Passwords do not match.',
        ];

        $validator = Validator::make($request->all(), $rules, $messages);

        if ($validator->fails()) {
            return redirect('register')
                ->withErrors($validator)
                ->withInput();
        }

        $validatedData = $validator->validated();

        User::create([
            'name' => $validatedData['name'],
            'email' => $validatedData['email'],
            'password' => Hash::make($validatedData['password']),
        ]);

        return redirect('/login')->with('success', 'Registration successful.');
    }

    public function account()
    {
        $user = Auth::user();
        return view('user_account', compact('user'));
    }

    public function updatePassword(Request $request)
    {
        $request->validate([
            'current_password' => 'required',
            'new_password' => 'required|min:8|confirmed',
        ]);

        $user = Auth::user();

        if (!Hash::check($request->current_password, $user->password)) {
            throw ValidationException::withMessages([
                'current_password' => 'The provided password does not match your current password.',
            ]);
        }

        $user->password = Hash::make($request->new_password);
        $user->save();

        return redirect()->route('user.account')->with('success', 'Password updated successfully.');
    }
}




// namespace App\Http\Controllers;

// use Illuminate\Http\Request;
// use App\Models\Invitation;
// use App\Models\User;
// use Illuminate\Support\Facades\Hash;
// use Illuminate\Support\Facades\Session;

// class UserController extends Controller
// {
//     public function showRegistrationForm()
//     {
//         return view('user_registration');
//     }

//     public function register(Request $request)
//     {
//         // Validate user input
//         $validatedData = $request->validate([
//             'user_name' => 'required',
//             'user_email' => 'required|email|unique:users,email',
//             'user_password' => 'required|min:6|confirmed',
//         ]);

//         // Create new user
//         $user = User::create([
//             'name' => $validatedData['user_name'],
//             'email' => $validatedData['user_email'],
//             'password' => bcrypt($validatedData['user_password']),
//         ]);

//         // Redirect user after registration
//         return redirect('/')->with('success', 'User registered successfully!');
//     }
// }


// class UserController extends Controller
// {
//     public function showUserRegistrationPage()
//     {
//         return view('user_regisration');
//     }

//     public function UserRegistration(Request $request)
//     {
//         $validatedData = $request->validate([
//             'user_name' => 'required|string|max:255',
//             'user_email' => 'required|string|email|max:255|unique:partners',
//             'user_password' => 'required|string|min:6|confirmed',
//         ]);

//         session($validatedData);
//         Partner::create([
//             'user_name' => $validatedData['user_name'],
//             'user_email' => $validatedData['user_email'],
//             'user_password' => Hash::make($validatedData['password']),
//         ]);

//         // Clear the session data related to registration
//         Session::forget(['user_name', 'user_email', 'user_password']);
//     }
// }




----------------------------------------
Filename: /var/www/zerowastewagon/example-app/app/Http/Controllers/CartController.php
Contents:
<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use App\Models\FoodOffer;  
use App\Models\ActiveOrder; 

class CartController extends Controller
{
    public function addToCart(Request $request)
    {
        $offerId = $request->input('offerId');
        $requestedQuantity = (int) $request->input('quantity');

        // Retrieve the offer and check stock
        $offer = FoodOffer::findOrFail($offerId);
        if ($offer->quantity < $requestedQuantity) {
            return response()->json(['success' => false, 'message' => 'Not enough stock available']);
        }

        // Deduct the quantity from the stock
        $offer->decrement('quantity', $requestedQuantity);

        // Add to active_orders
        ActiveOrder::create([
            'user_id' => Auth::id(),
            'offer_id' => $offerId,
            'quantity' => $requestedQuantity
        ]);

        return response()->json(['success' => true, 'message' => 'Item added to cart successfully']);
    }

        public function showCart()
    {
        $userId = Auth::id(); // Ensure you have the user logged in

        // Retrieve all active orders for the user
        $activeOrders = ActiveOrder::with('offer')->where('user_id', $userId)->get();

        $items = $activeOrders->map(function ($order) {
            return [
                'id' => $order->id,
                'name' => $order->offer->name,
                'price' => $order->offer->price,
                'image_path' => $order->offer->image_path,
                'quantity' => $order->quantity,
                'created_at' => $order->created_at->timestamp // Pass the timestamp
            ];
        });

        return view('cart', ['items' => $items]);
    }


    public function removeFromCart($id)
    {
        $order = ActiveOrder::find($id);
        if ($order && !$order->paid) {
            $order->offer->increment('quantity', $order->quantity);
            $order->delete();
            return response()->json(['success' => true]);
        }
        return response()->json(['success' => false], 404);
    }
    

}

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/app/Http/Middleware/SetLocale.php
Contents:
<?php

namespace App\Http\Middleware;

use Closure;
use Illuminate\Http\Request;
use Symfony\Component\HttpFoundation\Response;
use Illuminate\Support\Facades\App;
use App\Http\Controllers\GoogleTranslateController;

class SetLocale
{
    /**
     * Handle an incoming request.
     *
     * @param  \Closure(\Illuminate\Http\Request): (\Symfony\Component\HttpFoundation\Response)  $next
     */
    public function handle(Request $request, Closure $next)
    {
        // dd(session('locale'));
        $locale = session('locale');
        App::setLocale($locale);
        return $next($request);
    }
}

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/app/Models/PickupTime.php
Contents:
<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class PickupTime extends Model
{
    use HasFactory;

    protected $fillable = ['partner_id', 'day_of_week', 'start_time', 'end_time'];

    public function partner()
    {
        return $this->belongsTo(Partner::class);
    }
}
----------------------------------------
Filename: /var/www/zerowastewagon/example-app/app/Models/Partner.php
Contents:
<?php

namespace App\Models;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Foundation\Auth\User as Authenticatable;

class Partner extends Authenticatable
{
    use HasFactory;

    protected $fillable = [
        'venue_type', 'venue_name', 'address', 'website', 'venue_phone_number',
        'venue_city', 'venue_country', 'email', 'password', 'latitude', 'longitude'
    ];

    protected $hidden = ['password'];

    public function offers()
    {
        return $this->hasMany(FoodOffer::class, 'partner_id', 'id');
    }
    
    public function pickupTimes()
    {
        return $this->hasMany(PickupTime::class);
    }
}


----------------------------------------
Filename: /var/www/zerowastewagon/example-app/app/Models/ActiveOrder.php
Contents:
<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class ActiveOrder extends Model
{
    use HasFactory;

    protected $fillable = [
        'user_id',
        'offer_id',
        'quantity',
        'paid'
    ];
    
    public function offer()
    {
        return $this->belongsTo(FoodOffer::class, 'offer_id');
    }
    
    
}

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/app/Models/HistoryOfOrder.php
Contents:
<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class HistoryOfOrder extends Model
{
    use HasFactory;

    protected $table = 'history_of_orders';  
    protected $fillable = [
        'user_id', 
        'offer_id', 
        'quantity', 
        'paid'
    ];

    
    public function user()
    {
        return $this->belongsTo(User::class);
    }

    public function offer()
    {
        return $this->belongsTo(FoodOffer::class, 'offer_id');
    }
    
}

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/app/Models/Invitation.php
Contents:
<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class Invitation extends Model
{
    use HasFactory;

    protected $fillable = ['invitation_code', 'used'];
}


----------------------------------------
Filename: /var/www/zerowastewagon/example-app/app/Models/User.php
Contents:
<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Foundation\Auth\User as Authenticatable;
use Illuminate\Notifications\Notifiable;

class User extends Authenticatable
{
    use HasFactory, Notifiable;

    /**
     * The attributes that are mass assignable.
     *
     * @var array
     */
    protected $fillable = [
        'name', 'email', 'password',
    ];

    /**
     * The attributes that should be hidden for arrays.
     *
     * @var array
     */
    protected $hidden = [
        'password', 'remember_token',
    ];

    /**
     * The attributes that should be cast to native types.
     *
     * @var array
     */
    protected $casts = [
        'email_verified_at' => 'datetime',
    ];
}

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/app/Models/FoodOffer.php
Contents:
<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class FoodOffer extends Model
{
    use HasFactory;

    protected $fillable = [
        'partner_id',
        'name',
        'description',
        'price',
        'quantity',
        'image_path',
        'cuisine_type',
        'caloric_content',
        'dietary_restrictions'  
    ];
    public function activeOrders()
    {
        return $this->hasMany(ActiveOrder::class, 'offer_id');
    }
        public function partner()
    {
        return $this->belongsTo(Partner::class);
    }
    
    public function unpublish()
    {
        $this->update(['quantity' => 0]);
    }

    public function publish($quantity)
    {
        $this->update(['quantity' => $quantity]);
    }
}

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/app/Services/GeocodingService.php
Contents:
<?php

namespace App\Services;

class GeocodingService
{
    public function geocodeAddress($address)
    {
        $userAgent = "YourEmailAddress@example.com";
        $url = "https://nominatim.openstreetmap.org/search?format=json&limit=1&q=" . urlencode($address);
        $context = stream_context_create(['http' => ['header' => "User-Agent: $userAgent"]]);
        $response = file_get_contents($url, false, $context);
        $data = json_decode($response, true);

        return $data ? ['lat' => $data[0]['lat'], 'lon' => $data[0]['lon']] : null;
    }
}

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/database/seeders/DatabaseSeeder.php
Contents:
<?php

namespace Database\Seeders;

use App\Models\User;
// use Illuminate\Database\Console\Seeds\WithoutModelEvents;
use Illuminate\Database\Seeder;

class DatabaseSeeder extends Seeder
{
    /**
     * Seed the application's database.
     */
    public function run(): void
    {
        // User::factory(10)->create();

        User::factory()->create([
            'name' => 'Test User',
            'email' => 'test@example.com',
        ]);
    }
}

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/database/seeders/InvitationsTableSeeder.php
Contents:
<?php

namespace Database\Seeders;

use Illuminate\Database\Console\Seeds\WithoutModelEvents;
use Illuminate\Database\Seeder;
use Illuminate\Support\Facades\DB; // Include the DB facade

class InvitationsTableSeeder extends Seeder
{
    /**
     * Run the database seeds.
     */
    public function run(): void
    {
        for ($i = 0; $i < 100; $i++) {
            DB::table('invitations')->insert([
                'invitation_code' => str_pad(mt_rand(0, 999999), 6, '0', STR_PAD_LEFT), // Generate a 6-digit code.
                'used' => false, // Initially, codes are not used.
            ]);
        }
    }
}


----------------------------------------
Filename: /var/www/zerowastewagon/example-app/database/migrations/0001_01_01_000002_create_jobs_table.php
Contents:
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('jobs', function (Blueprint $table) {
            $table->id();
            $table->string('queue')->index();
            $table->longText('payload');
            $table->unsignedTinyInteger('attempts');
            $table->unsignedInteger('reserved_at')->nullable();
            $table->unsignedInteger('available_at');
            $table->unsignedInteger('created_at');
        });

        Schema::create('job_batches', function (Blueprint $table) {
            $table->string('id')->primary();
            $table->string('name');
            $table->integer('total_jobs');
            $table->integer('pending_jobs');
            $table->integer('failed_jobs');
            $table->longText('failed_job_ids');
            $table->mediumText('options')->nullable();
            $table->integer('cancelled_at')->nullable();
            $table->integer('created_at');
            $table->integer('finished_at')->nullable();
        });

        Schema::create('failed_jobs', function (Blueprint $table) {
            $table->id();
            $table->string('uuid')->unique();
            $table->text('connection');
            $table->text('queue');
            $table->longText('payload');
            $table->longText('exception');
            $table->timestamp('failed_at')->useCurrent();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('jobs');
        Schema::dropIfExists('job_batches');
        Schema::dropIfExists('failed_jobs');
    }
};

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/database/migrations/0001_01_01_000000_create_users_table.php
Contents:
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

class CreateUsersTable extends Migration
{
    /**
     * Run the migrations.
     */
    public function up()
    {
        Schema::create('users', function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->string('email')->unique();
            $table->string('password');
            $table->timestamps();
        });
    }

    /**
     * Reverse the migrations. test test
     */
    public function down()
    {
        Schema::dropIfExists('users');
    }
}

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/database/migrations/2024_05_04_102442_create_history_of_orders_table.php
Contents:
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('history_of_orders', function (Blueprint $table) {
            $table->id();
            $table->unsignedBigInteger('user_id');
            $table->unsignedBigInteger('offer_id');
            $table->integer('quantity');
            $table->boolean('paid')->default(false);
            $table->timestamps();
        
            $table->foreign('user_id')->references('id')->on('users');
            $table->foreign('offer_id')->references('id')->on('food_offers');
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('history_of_orders');
    }
};

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/database/migrations/2024_04_21_110027_add_attributes_to_food_offers.php
Contents:
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration {
    public function up()
    {
        Schema::table('food_offers', function (Blueprint $table) {
            $table->string('cuisine_type')->nullable();
            $table->integer('caloric_content')->nullable();
        });
    }

    public function down()
    {
        Schema::table('food_offers', function (Blueprint $table) {
            $table->dropColumn(['cuisine_type', 'caloric_content']);
        });
    }
};

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/database/migrations/2024_05_30_120641_create_pickup_times_table.php
Contents:
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
        public function up()
    {
        Schema::create('pickup_times', function (Blueprint $table) {
            $table->id();
            $table->unsignedBigInteger('partner_id');
            $table->string('day_of_week');
            $table->time('start_time')->nullable();
            $table->time('end_time')->nullable();
            $table->timestamps();

            $table->foreign('partner_id')->references('id')->on('partners')->onDelete('cascade');
        });
    }
    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('pickup_times');
    }
};

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/database/migrations/2024_05_01_181429_create_active_orders_table.php
Contents:
<?php
use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up()
    {
        Schema::create('active_orders', function (Blueprint $table) {
            $table->id();
            $table->foreignId('user_id')->constrained('users')->onDelete('cascade');
            $table->foreignId('offer_id')->constrained('food_offers')->onDelete('cascade');
            $table->unsignedInteger('quantity');
            $table->timestamps();
        });
    }

    public function down()
    {
        Schema::dropIfExists('active_orders');
    }
};

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/database/migrations/2024_04_29_202935_add_lat_lng_to_partners.php
Contents:
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

class AddLatLngToPartners extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        Schema::table('partners', function (Blueprint $table) {
            $table->decimal('latitude', 10, 8)->nullable();
            $table->decimal('longitude', 11, 8)->nullable();
        });
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        Schema::table('partners', function (Blueprint $table) {
            $table->dropColumn(['latitude', 'longitude']);
        });
    }
}

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/database/migrations/2024_04_16_201038_create_sessions_table.php
Contents:
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

class CreateSessionsTable extends Migration
{
    public function up()
    {
        Schema::create('sessions', function (Blueprint $table) {
            $table->string('id')->primary();
            $table->foreignId('user_id')->nullable()->index();
            $table->string('ip_address', 45)->nullable();
            $table->text('user_agent')->nullable();
            $table->text('payload');
            $table->integer('last_activity');
        });
    }

    public function down()
    {
        Schema::dropIfExists('sessions');
    }
}

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/database/migrations/2024_04_12_193116_create_food_offers_table.php
Contents:
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('food_offers', function (Blueprint $table) {
            $table->id();
            $table->foreignId('partner_id')->constrained('partners');
            $table->string('name');
            $table->text('description');
            $table->decimal('price', 8, 2);
            $table->unsignedInteger('quantity');
            $table->string('image_path');
            $table->timestamps();
        });      
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('food_offers');
    }
};

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/database/migrations/2024_04_21_112246_add_dietary_restrictions_to_food_offers.php
Contents:
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration {
    public function up()
    {
        Schema::table('food_offers', function (Blueprint $table) {
            $table->json('dietary_restrictions')->nullable();
        });
    }

    public function down()
    {
        Schema::table('food_offers', function (Blueprint $table) {
            $table->dropColumn('dietary_restrictions');
        });
    }
};

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/database/migrations/2024_05_04_102515_add_paid_to_active_orders_table.php
Contents:
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::table('active_orders', function (Blueprint $table) {
            $table->boolean('paid')->default(false); // Adds a 'paid' column, defaulting to false
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::table('active_orders', function (Blueprint $table) {
            //
        });
    }
};

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/database/migrations/2024_04_05_191231_create_invitations_table.php
Contents:
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up()
    {
        Schema::create('invitations', function (Blueprint $table) {
            $table->id();
            $table->string('invitation_code', 6)->unique(); // 6-digit code, unique
            $table->boolean('used')->default(false); // Flag to indicate if the code has been used
            $table->timestamps();
        });
    }
    

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('invitations');
    }
};

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/database/migrations/2024_04_05_192242_create_partners_table.php
Contents:
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up()
{
    Schema::create('partners', function (Blueprint $table) {
        $table->id();
        $table->string('venue_type')->nullable();
        $table->string('venue_name');
        $table->string('address');
        $table->string('website')->nullable();
        $table->string('venue_phone_number');
        $table->string('venue_city');
        $table->string('venue_country');
        $table->string('email')->unique();
        $table->string('password');
        $table->timestamps();
    });
}

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('partners');
    }
};

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/database/migrations/0001_01_01_000001_create_cache_table.php
Contents:
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('cache', function (Blueprint $table) {
            $table->string('key')->primary();
            $table->mediumText('value');
            $table->integer('expiration');
        });

        Schema::create('cache_locks', function (Blueprint $table) {
            $table->string('key')->primary();
            $table->string('owner');
            $table->integer('expiration');
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('cache');
        Schema::dropIfExists('cache_locks');
    }
};

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/database/.gitignore
Contents:
*.sqlite*

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/database/factories/UserFactory.php
Contents:
<?php

namespace Database\Factories;

use Illuminate\Database\Eloquent\Factories\Factory;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Str;

/**
 * @extends \Illuminate\Database\Eloquent\Factories\Factory<\App\Models\User>
 */
class UserFactory extends Factory
{
    /**
     * The current password being used by the factory.
     */
    protected static ?string $password;

    /**
     * Define the model's default state.
     *
     * @return array<string, mixed>
     */
    public function definition(): array
    {
        return [
            'name' => fake()->name(),
            'email' => fake()->unique()->safeEmail(),
            'email_verified_at' => now(),
            'password' => static::$password ??= Hash::make('password'),
            'remember_token' => Str::random(10),
        ];
    }

    /**
     * Indicate that the model's email address should be unverified.
     */
    public function unverified(): static
    {
        return $this->state(fn (array $attributes) => [
            'email_verified_at' => null,
        ]);
    }
}

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/resources/js/bootstrap.js
Contents:
import axios from 'axios';
window.axios = axios;

window.axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/resources/js/app.js
Contents:
import './bootstrap';

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/resources/views/cancel.blade.php
Contents:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Payment Canceled</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-4">
        <div class="alert alert-warning">
            <h4>Payment Canceled</h4>
            <p>You have canceled the payment. If this was an error, you can try to check out again.</p>
            <a href="/cart" class="btn btn-primary">Return to Cart</a>
        </div>
    </div>
</body>
</html>

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/resources/views/partner_update_offers.blade.php
Contents:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Offer - Partner Dashboard</title>
    @vite(['resources/css/app.css', 'resources/js/app.js'])
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        .active {
            background-color: white; /* Override background color */
            color: black; /* Change text color for visibility */
            border: 2px solid gray; /* Ensure visibility */
        }
    </style>
</head>
<body class="bg-gray-100">
    <header class="flex justify-between items-center p-6 bg-green-500 text-white">
        <h1 class="text-3xl">ZeroWasteWagon</h1>
        <div class="space-x-4 flex items-center">
            <a href="{{ route('locale', 'lt') }}" class="hover:underline">Lietuvių</a>
            <a href="{{ route('locale', 'en') }}" class="hover:underline">English</a>
            <a href="#" class="hover:underline">@lang('main.acount_info')</a>
            <a href="/" class="hover:underline">@lang('main.logout')</a>
        </div>
    </header>

    <div class="container mx-auto p-8">
    <h1 class="text-3xl font-bold text-green-700 mb-4">Edit your Offer</h1>

            <!-- Error Messages -->
            @if ($errors->any())
            <div class="bg-red-500 text-white font-bold rounded-t px-4 py-2">
                Error updating the offer. Please check your inputs.
            </div>
            <div class="border border-t-0 border-red-400 rounded-b bg-red-100 px-4 py-3 text-red-700">
                <ul>
                    @foreach ($errors->all() as $error)
                        <li>{{ $error }}</li>
                    @endforeach
                </ul>
            </div>
            @endif

            <!-- Success Message -->
            @if (session('success'))
            <div class="bg-green-500 text-white font-bold rounded-t px-4 py-2">
                {{ session('success') }}
            </div>
            @endif

            <div>
                <a href="{{ route('offers.index') }}" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">Back to List of Offers</a>
                <a href="{{ route('partner.dashboard') }}" class="bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded">@lang('main.return_to_dashboard')</a>
            </div>
        <form action="{{ route('offers.update', $offer->id) }}" method="POST" enctype="multipart/form-data" class="w-full max-w-lg">
            @csrf
            @method('PUT')

            <!-- Name -->
            <div class="mb-4">
                <label for="name" class="block text-sm font-medium text-gray-700">@lang('main.pa_offer_name')</label>
                <input type="text" name="name" id="name" value="{{ $offer->name }}" required class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-green-500 focus:border-green-500 sm:text-sm">
            </div>

            <!-- Description -->
            <div class="mb-4">
                <label for="description" class="block text-sm font-medium text-gray-700">@lang('main.pa_offer_description')</label>
                <textarea id="description" name="description" required class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-green-500 focus:border-green-500 sm:text-sm">{{ $offer->description }}</textarea>
            </div>

            <!-- Price -->
            <div class="mb-4">
                <label for="price" class="block text-sm font-medium text-gray-700">@lang('main.pa_offer_price')</label>
                <input type="number" id="price" name="price" step="0.01" value="{{ $offer->price }}" required class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-green-500 focus:border-green-500 sm:text-sm">
            </div>

            <!-- Quantity -->
            <div class="mb-4">
                <label for="quantity" class="block text-sm font-medium text-gray-700">@lang('main.pa_offer_quantity')</label>
                <input type="number" id="quantity" name="quantity" step="1" value="{{ $offer->quantity }}" required class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-green-500 focus:border-green-500 sm:text-sm">
            </div>

            <!-- Image Upload -->
            <div class="mb-4">
                <label for="image" class="block text-sm font-medium text-gray-700">@lang('main.pa_offer_image')</label>
                <input type="file" id="image" name="image" class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-green-500 focus:border-green-500 sm:text-sm">
                @error('image')
                <span class="text-red-500 text-sm">{{ $message }}</span>
                @enderror
                <div class="mt-1">
                    <img src="{{ asset('storage/' . $offer->image_path) }}" alt="Current Offer Image" class="w-20 h-20 object-cover">
                </div>
            </div>

            <!-- Cuisine Type -->
            <div class="mb-4">
                <label for="cuisine_type" class="block text-sm font-medium text-gray-700">@lang('main.cuisine_type')</label>
                <select id="cuisine_type" name="cuisine_type" class="mt-1 block w-full pl-3 pr-10 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-green-500 focus:border-green-500 sm:text-sm">
                    <option value="">@lang('main.cuisine_select')</option>
                    <option value="Italian" {{ $offer->cuisine_type == 'Italian' ? 'selected' : '' }}>@lang('main.it')</option>
                    <option value="Mexican" {{ $offer->cuisine_type == 'Mexican' ? 'selected' : '' }}>@lang('main.me')</option>
                    <option value="Chinese" {{ $offer->cuisine_type == 'Chinese' ? 'selected' : '' }}>@lang('main.ch')</option>
                    <option value="Indian" {{ $offer->cuisine_type == 'Indian' ? 'selected' : '' }}>@lang('main.ind')</option>
                    <option value="French" {{ $offer->cuisine_type == 'French' ? 'selected' : '' }}>@lang('main.fr')</option>
                </select>
            </div>

            <!-- Caloric Content -->
            <div class="mb-4">
                <label for="caloric_content" class="block text-sm font-medium text-gray-700">@lang('main.caloric_content')</label>
                <input type="number" id="caloric_content" name="caloric_content" value="{{ $offer->caloric_content }}" class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-green-500 focus:border-green-500 sm:text-sm">
            </div>

            <!-- Dietary Restrictions Buttons -->
            <div class="mb-4">
    <label for="dietary_restrictions" class="block text-sm font-medium text-gray-700">@lang('main.restrictions')</label>
    <div class="flex flex-wrap gap-2">
        @php
            $dietary_restrictions = json_decode($offer->dietary_restrictions, true);
        @endphp

        <!-- Vegan -->
        <button type="button" class="dietary-btn bg-green-500 text-white rounded px-4 py-2 shadow inline-flex items-center {{ in_array('vegan', $dietary_restrictions ?? []) ? 'active' : '' }}" onclick="toggleCheckbox('vegan')" id="btn_vegan">
            <i class="fas fa-leaf mr-2"></i> @lang('main.vegan')
            <input type="checkbox" id="vegan" name="dietary_restrictions[]" value="vegan" hidden {{ in_array('vegan', $dietary_restrictions ?? []) ? 'checked' : '' }}>
        </button>

        <!-- Gluten-free -->
        <button type="button" class="dietary-btn bg-blue-500 text-white rounded px-4 py-2 shadow inline-flex items-center {{ in_array('gluten_free', $dietary_restrictions ?? []) ? 'active' : '' }}" onclick="toggleCheckbox('gluten_free')" id="btn_gluten_free">
            <i class="fas fa-bread-slice mr-2"></i> @lang('main.gluten')
            <input type="checkbox" id="gluten_free" name="dietary_restrictions[]" value="gluten_free" hidden {{ in_array('gluten_free', $dietary_restrictions ?? []) ? 'checked' : '' }}>
        </button>

        <!-- Vegetarian -->
        <button type="button" class="dietary-btn bg-orange-500 text-white rounded px-4 py-2 shadow inline-flex items-center {{ in_array('vegetarian', $dietary_restrictions ?? []) ? 'active' : '' }}" onclick="toggleCheckbox('vegetarian')" id="btn_vegetarian">
            <i class="fas fa-carrot mr-2"></i> @lang('main.vegeterian')
            <input type="checkbox" id="vegetarian" name="dietary_restrictions[]" value="vegetarian" hidden {{ in_array('vegetarian', $dietary_restrictions ?? []) ? 'checked' : '' }}>
        </button>

        <!-- Keto -->
        <button type="button" class="dietary-btn bg-red-500 text-white rounded px-4 py-2 shadow inline-flex items-center {{ in_array('keto', $dietary_restrictions ?? []) ? 'active' : '' }}" onclick="toggleCheckbox('keto')" id="btn_keto">
            <i class="fas fa-bacon mr-2"></i> Keto
            <input type="checkbox" id="keto" name="dietary_restrictions[]" value="keto" hidden {{ in_array('keto', $dietary_restrictions ?? []) ? 'checked' : '' }}>
        </button>

        <!-- Paleo -->
        <button type="button" class="dietary-btn bg-yellow-600 text-white rounded px-4 py-2 shadow inline-flex items-center {{ in_array('paleo', $dietary_restrictions ?? []) ? 'active' : '' }}" onclick="toggleCheckbox('paleo')" id="btn_paleo">
            <i class="fas fa-drumstick-bite mr-2"></i> Paleo
            <input type="checkbox" id="paleo" name="dietary_restrictions[]" value="paleo" hidden {{ in_array('paleo', $dietary_restrictions ?? []) ? 'checked' : '' }}>
        </button>

        <!-- Dairy-free -->
        <button type="button" class="dietary-btn bg-teal-500 text-white rounded px-4 py-2 shadow inline-flex items-center {{ in_array('dairy_free', $dietary_restrictions ?? []) ? 'active' : '' }}" onclick="toggleCheckbox('dairy_free')" id="btn_dairy_free">
            <i class="fas fa-cheese mr-2"></i> @lang('main.dairy')
            <input type="checkbox" id="dairy_free" name="dietary_restrictions[]" value="dairy_free" hidden {{ in_array('dairy_free', $dietary_restrictions ?? []) ? 'checked' : '' }}>
        </button>
    </div>
</div>
<script>
    function toggleCheckbox(value) {
        var checkbox = document.getElementById(value);
        var button = document.getElementById('btn_' + value);
        if (checkbox) {
            checkbox.checked = !checkbox.checked; // Toggle the state of the checkbox
            button.classList.toggle('active'); // Toggle a class that changes the appearance
        }
    }
</script>

            <button type="submit" class="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded">@lang('main.update')</button>
        </form>
    </div>

    <footer class="text-center p-6 bg-gray-800 text-white">
        @lang('main.footer')
    </footer>
</body>
</html>

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/resources/views/user_list_of_venues.blade.php
Contents:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ZeroWasteWagon</title>
    @vite(['resources/css/app.css', 'resources/js/app.js'])
</head>

<body class="bg-gray-50">
    <header class="flex justify-between items-center p-6 bg-green-500 text-white">
        <h1 class="text-3xl">ZeroWasteWagon</h1>
        <div class="space-x-4 flex items-center">
            <a href="/about-us" class="hover:underline">About Us</a>
            <a href="/about-us" class="hover:underline">Log out</a>
        </div>
    </header>

    <div class="container mx-auto px-4 py-8">
        
    <div class="text-center">
    <h2 class="text-3xl mb-4 font-bold text-blue-600 relative">
        <span style="border-bottom: 3px solid #00FF00;">Current Offers</span>
    </h2>
</div>

        @foreach($data as $el)

        <a href="{{ route('smth', ['partner_id' => 1]) }}" class="font-bold">|{{ $el->venue_name }}|</a>

        
        @endforeach

    <script>
        document.getElementById('loginDropdown').addEventListener('click', function() {
            document.getElementById('dropdownContent').classList.toggle('hidden');
        });
    </script>
</body>
</html>

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/resources/views/step2-partner-registration.blade.php
Contents:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Step 2: Partner Registration</title>
    @vite(['resources/css/app.css', 'resources/js/app.js'])
</head>
<body class="bg-gray-50">
    <header class="flex justify-between items-center p-6 bg-green-500 text-white">
        <h1 class="text-3xl font-sans">ZeroWasteWagon</h1>
        <div class="space-x-4 flex items-center">
            <a href="/about-us" class="hover:underline">About Us</a>
            <a href="{{ route('locale', 'lt') }}" class="hover:underline">Lietuvių</a>
            <a href="{{ route('locale', 'en') }}" class="hover:underline">English</a>
    </header>
    <div class="flex items-center justify-center min-h-screen">
        <div class="bg-white p-8 rounded-lg shadow-md w-full max-w-md">
            <h2 class="text-2xl font-bold mb-6 text-center">@lang('main.ve_info')</h2>
            @if ($errors->any())
                <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative" role="alert">
                    <strong class="font-bold">Whoops!</strong>
                    <span class="block sm:inline">{{ $errors->first() }}</span>
                </div>
            @endif

            <form action="{{ route('partner.registration.step2.post') }}" method="POST">
                @csrf
                <div class="mb-4">

                    <input type="text" name="venue_country" placeholder="Venue Country" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" required>

                </div>
                <div class="mb-4">
                    <input type="text" name="venue_city" placeholder="Venue City" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" required maxlength="255">
                </div>
                <div class="mb-4">
                    <input type="text" name="venue_name" placeholder="Venue Name" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" required maxlength="255">
                </div>
                <div class="mb-4">
                    <input type="text" name="venue_country" placeholder="@lang('main.country')" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" required maxlength="255">
                </div>
                <div class="mb-4">
                    <input type="text" name="venue_city" placeholder="@lang('main.city')" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" required maxlength="255">
                </div>
                <div class="mb-4">
                    <input type="text" name="venue_name" placeholder="@lang('main.ve_name')" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" required maxlength="255">
                </div>
                <div class="mb-4">
                    <input type="text" name="venue_type" placeholder="@lang('main.ve_type')" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" maxlength="255">

                </div>
                <div class="flex justify-center">
                    <button type="submit" class="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline">@lang('main.next')</button>
                </div>
            </form>
        </div>
    </div>
</body>
</html>

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/resources/views/register_partner.blade.php
Contents:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Partner Registration</title>
    @vite(['resources/css/app.css', 'resources/js/app.js'])
</head>
<body class="bg-gray-50">
    <div class="container mx-auto px-4 py-8">
        <h2 class="text-2xl mb-4">Partner Registration</h2>

        @if($errors->any())
        <div class="bg-red-500 text-white font-bold rounded-t px-4 py-2">
            Whoops! Something went wrong.
        </div>
        <div class="border border-t-0 border-red-400 rounded-b bg-red-100 px-4 py-3 text-red-700">
            <ul>
                @foreach ($errors->all() as $error)
                <li>{{ $error }}</li>
                @endforeach
            </ul>
        </div>
        @endif

        <form action="{{ route('register.partner') }}" method="POST" class="bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4">
            @csrf
            <!-- Venue Type (optional) -->
            <div class="mb-4">
                <label class="block text-gray-700 text-sm font-bold mb-2" for="venue_type">Venue Type</label>
                <input class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" name="venue_type" type="text" placeholder="Enter Venue Type">
            </div>

            <!-- Venue Name -->
            <div class="mb-4">
                <label class="block text-gray-700 text-sm font-bold mb-2" for="venue_name">Venue Name</label>
                <input class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" name="venue_name" type="text" placeholder="Enter Venue Name" required>
            </div>

            <!-- Address -->
            <div class="mb-4">
                <label class="block text-gray-700 text-sm font-bold mb-2" for="address">Address</label>
                <input class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" name="address" type="text" placeholder="Enter Address" required>
            </div>

            <!-- Website (optional) -->
            <div class="mb-4">
                <label class="block text-gray-700 text-sm font-bold mb-2" for="website">Website</label>
                <input class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" name="website" type="text" placeholder="Enter Website">
            </div>

            <!-- Venue Phone Number -->
            <div class="mb-4">
                <label class="block text-gray-700 text-sm font-bold mb-2" for="venue_phone_number">Venue Phone Number</label>
                <input class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" name="venue_phone_number" type="text" placeholder="Enter Venue Phone Number" required>
            </div>

            <!-- Venue City -->
            <div class="mb-4">
                <label class="block text-gray-700 text-sm font-bold mb-2" for="venue_city">Venue City</label>
                <input class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" name="venue_city" type="text" placeholder="Enter Venue City" required>
            </div>

            <!-- Venue Country -->
            <div class="mb-4">
                <label class="block text-gray-700 text-sm font-bold mb-2" for="venue_country">Venue Country</label>
                <input class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" name="venue_country" type="text" placeholder="Enter Venue Country" required>
            </div>

            <!-- Email -->
            <div class="mb-4">
                <label class="block text-gray-700 text-sm font-bold mb-2" for="email">Email</label>
                <input class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" name="email" type="email" placeholder="Enter Email" required>
            </div>

            <!-- Password -->
            <div class="mb-4">
                <label class="block text-gray-700 text-sm font-bold mb-2" for="password">Password</label>
                <input class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" name="password" type="password" placeholder="Enter Password" required>
            </div>

            <!-- Password Confirmation -->
            <div class="mb-4">
                <label class="block text-gray-700 text-sm font-bold mb-2" for="password_confirmation">Confirm Password</label>
                <input class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" name="password_confirmation" type="password" placeholder="Enter Confirm Password" required>
            </div>

            <!-- Invitation Code -->
            <div class="mb-4">
                <label class="block text-gray-700 text-sm font-bold mb-2" for="invitation_code">Invitation Code</label>
                <input class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" name="invitation_code" type="text" placeholder="Enter Invitation Code" required>
            </div>

            <div class="flex items-center justify-between">
                <button class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline" type="submit">
                    Register
                </button>
            </div>
        </form>
    </div>
</body>
</html>

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/resources/views/partner_account.blade.php
Contents:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Partner Account Information</title>
    @vite(['resources/css/app.css', 'resources/js/app.js'])
</head>
<body class="bg-gray-50">
    <header class="flex justify-between items-center p-6 bg-green-500 text-white">
        <h1 class="text-3xl">Account Information</h1>
        <a href="{{ route('partner.dashboard') }}" class="hover:underline text-white">Home</a>
    </header>

    <div class="container mx-auto mt-4 p-4 bg-white shadow-md rounded">
        @if(session('success'))
            <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative" role="alert">
                {{ session('success') }}
            </div>
        @endif

        <h2 class="text-2xl mb-4">Account Details</h2>
        <form action="{{ route('partner.update-account-info') }}" method="POST">
            @csrf
            <div class="mb-4">
                <label for="venue_name" class="block text-gray-700">Venue Name</label>
                <input type="text" name="venue_name" id="venue_name" class="border rounded w-full py-2 px-3 mt-1" value="{{ $partner->venue_name }}" required>
                @error('venue_name')
                    <span class="text-red-500">{{ $message }}</span>
                @enderror
            </div>
            <div class="mb-4">
                <label for="venue_phone_number" class="block text-gray-700">Phone Number</label>
                <input type="text" name="venue_phone_number" id="venue_phone_number" class="border rounded w-full py-2 px-3 mt-1" value="{{ $partner->venue_phone_number }}" required>
                @error('venue_phone_number')
                    <span class="text-red-500">{{ $message }}</span>
                @enderror
            </div>
            <div class="mb-4">
                <label for="venue_city" class="block text-gray-700">City</label>
                <input type="text" name="venue_city" id="venue_city" class="border rounded w-full py-2 px-3 mt-1" value="{{ $partner->venue_city }}" required>
                @error('venue_city')
                    <span class="text-red-500">{{ $message }}</span>
                @enderror
            </div>
            <div class="mb-4">
                <label for="venue_country" class="block text-gray-700">Country</label>
                <input type="text" name="venue_country" id="venue_country" class="border rounded w-full py-2 px-3 mt-1" value="{{ $partner->venue_country }}" required>
                @error('venue_country')
                    <span class="text-red-500">{{ $message }}</span>
                @enderror
            </div>
            <div class="mb-4">
                <label for="address" class="block text-gray-700">Address</label>
                <input type="text" name="address" id="address" class="border rounded w-full py-2 px-3 mt-1" value="{{ $partner->address }}" required>
                @error('address')
                    <span class="text-red-500">{{ $message }}</span>
                @enderror
            </div>
            <button type="submit" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">Update Account Info</button>
        </form>

        <h2 class="text-2xl mt-6 mb-4">Pickup Times</h2>
        <form action="{{ route('partner.update-pickup-times') }}" method="POST">
            @csrf
            @foreach (['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'] as $day)
                <div class="mb-4">
                    <label class="block text-gray-700">{{ $day }}</label>
                    <div class="flex space-x-2">
                        <input type="time" name="pickup_times[{{ $day }}][start_time]" class="border rounded py-2 px-3 mt-1" value="{{ $pickupTimes[$day]->start_time ?? '' }}" step="1800">
                        <input type="time" name="pickup_times[{{ $day }}][end_time]" class="border rounded py-2 px-3 mt-1" value="{{ $pickupTimes[$day]->end_time ?? '' }}" step="1800">
                    </div>
                </div>
            @endforeach
            <button type="submit" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">Update Pickup Times</button>
        </form>

        <h2 class="text-2xl mt-6 mb-4">Change Password</h2>
        <form action="{{ route('partner.update-password') }}" method="POST">
            @csrf
            <div class="mb-4">
                <label for="current_password" class="block text-gray-700">Current Password</label>
                <input type="password" name="current_password" id="current_password" class="border rounded w-full py-2 px-3 mt-1" required>
                @error('current_password')
                    <span class="text-red-500">{{ $message }}</span>
                @enderror
            </div>
            <div class="mb-4">
                <label for="new_password" class="block text-gray-700">New Password</label>
                <input type="password" name="new_password" id="new_password" class="border rounded w-full py-2 px-3 mt-1" required>
                @error('new_password')
                    <span class="text-red-500">{{ $message }}</span>
                @enderror
            </div>
            <div class="mb-4">
                <label for="new_password_confirmation" class="block text-gray-700">Confirm New Password</label>
                <input type="password" name="new_password_confirmation" id="new_password_confirmation" class="border rounded w-full py-2 px-3 mt-1" required>
            </div>
            <button type="submit" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">Update Password</button>
        </form>
    </div>
    <footer class="text-center p-6 bg-gray-800 text-white mt-6">
        © 2024 ZeroWasteWagon. All rights reserved.
    </footer>
</body>
</html>

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/resources/views/user_registration.blade.php
Contents:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User registration</title>
    @vite(['resources/css/app.css', 'resources/js/app.js'])
</head>
<body class="bg-gray-50">
    <div class="flex items-center justify-center min-h-screen">
        <div class="bg-white p-8 rounded-lg shadow-md w-full max-w-md">
            <h2 class="text-2xl font-bold mb-6 text-center">User Information</h2>
            <form method="POST" action="{{ route('user.registration') }}" class="bg-white p-8 rounded-lg shadow-md w-full max-w-md">
                @csrf
                <div class="mb-4">
                    <input type="text" name="user_name" placeholder="Name" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" required>
                </div>
                <div class="mb-4">
                    <input type="text" name="user_email" placeholder="Email" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" required>
                </div>
                <div class="mb-4">
                    <input type="text" name="user_password" placeholder="Password" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" required>
                </div>
                <div class="mb-4">
                    <input type="password" name="user_password" placeholder="Repeat your password" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" required>
                </div>

                <div class="flex justify-center">
                    <button type="submit" class="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline">Register</button>
                </div>
            </form>
        </div>
    </div>
</body>
</html>

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/resources/views/user_dashboard.blade.php
Contents:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta name="csrf-token" content="{{ csrf_token() }}">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Dashboard - ZeroWasteWagon</title>
    @vite(['resources/css/app.css', 'resources/js/app.js'])
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/nouislider/distribute/nouislider.min.css">
    <style>
        .modal-close {
            padding: 1rem;
            margin: -1rem -1rem -1rem auto;
        }

        #offerModal {
            z-index: 1050; /* Keeps the original z-index for the offer modal */
        }

        #confirmationModal {
            z-index: 1100; /* Higher than the offer modal to ensure visibility on top */
        }

        #offerModal .modal-close i, #confirmationModal .modal-close i {
            font-size: 1.5rem;
        }

        #map {
            height: 400px;
            z-index: 500; /* Lower than modals */
        }

        .custom-icon {
            font-family: "Font Awesome 5 Free";
            font-weight: 900;
            font-size: 1.5em;
            color: #2A3F54;
        }

        .user-icon {
            font-size: 1.8em;
            color: #4A90E2;
        }
        
        /* Centering the modal more effectively */
        #confirmationModal .modal-content {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 30%; 
            padding: 20px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.5);
        }

        /* Make the map sticky */
        .sticky-map {
            position: -webkit-sticky;
            position: sticky;
            top: 20px; 
            height: calc(100vh - 40px); 
        }
        
        /* Wider dropdown for better usability */
        .dropdown-menu {
            width: 300px;
            z-index: 1000;
        }

        .slider-values {
            display: flex;
            justify-content: space-between;
        }

        .slider-values span {
            font-weight: bold;
        }

        /* Align buttons to the center */
        .button-container {
            display: flex;
            gap: 0.5rem;
            align-items: center;
        }
    </style>
</head>
<body class="bg-gray-50">
    <header class="flex justify-between items-center p-6 bg-green-500 text-white">
        <h1 class="text-3xl">ZeroWasteWagon</h1>
        <div class="space-x-4 flex items-center">
        <button onclick="window.location.href='{{ route('user.account') }}'" class="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded">
                    @lang('main.acount_info')
                </button>
            <a href="{{ route('locale', 'lt') }}" class="hover:underline">Lietuvių</a>
            <a href="{{ route('locale', 'en') }}" class="hover:underline">English</a>
            <a href="/" class="hover:underline">Log out</a>
        </div>
    </header>

    <div class="container mx-auto p-4">
        <div class="mb-4">
            <div class="button-container">
                <!-- Search input with reduced width -->
                <input type="text" id="search-input" class="flex-grow leading-normal w-1/4 h-10 border-grey-light rounded px-3" placeholder="@lang('main.search')" style="flex: none;">
                <!-- Search button -->
                <button class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">
                    <i class="fas fa-search"></i>
                </button>
                <!-- Filter button -->
                <div class="relative">
                    <button class="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded" onclick="toggleDropdown('filter-menu')">
                        <i class="fas fa-filter"></i> @lang('main.filter')
                    </button>
                    <div id="filter-menu" class="dropdown-menu hidden absolute bg-white border rounded shadow-lg">
                        <div class="p-4">
                            <label for="price-range" class="block">@lang('main.price_range')</label>
                            <div id="price-range"></div>
                            <div class="slider-values">
                                <span id="min-price-value"></span>
                                <span id="max-price-value"></span>
                            </div>
                            <label for="caloric-range" class="block mt-4">@lang('main.content')</label>
                            <div id="caloric-range"></div>
                            <div class="slider-values">
                                <span id="min-caloric-value"></span>
                                <span id="max-caloric-value"></span>
                            </div>
                            <button class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mt-4" onclick="applyFilters()">@lang('main.apply_fiters')</button>
                        </div>
                    </div>
                </div>
                <!-- Sort button -->
                <div class="relative">
                    <button class="bg-yellow-500 hover:bg-yellow-700 text-white font-bold py-2 px-4 rounded" onclick="toggleDropdown('sort-menu')">
                        <i class="fas fa-sort"></i> @lang('main.sort')
                    </button>
                    <div id="sort-menu" class="dropdown-menu hidden absolute bg-white border rounded shadow-lg">
                        <div class="p-4">
                            <button class="block w-full text-left" onclick="sortVenuesByDistance()">@lang('main.distance')</button>
                        </div>
                    </div>
                </div>
                <!-- Refresh button -->
                <button id="refresh-button" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">
                    <i class="fas fa-sync"></i> @lang('main.refresh')
                </button>
                <!-- View Cart button -->
                <button onclick="window.location.href='/cart'" class="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded">
                    @lang('main.view_cart')
                </button>
                <!-- Order History button -->
                <button onclick="window.location.href='{{ route('user.order-history') }}'" class="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded">
                    @lang('main.order_history')
                </button>
            </div>
        </div>

        <!-- Venues and their offers -->
        <div class="flex flex-col md:flex-row md:space-x-4">
            <div id="venues-container" class="w-full md:w-1/2">
                <!-- Venues list -->
                @foreach ($venues as $venue)
                    @if ($venue->offers->count() > 0)
                        <div id="venue-{{ $venue->id }}" class="venue-item bg-white p-4 rounded-lg shadow mb-4" data-lat="{{ $venue->latitude }}" data-lng="{{ $venue->longitude }}">
                            <h2 class="font-bold text-lg venue-name">{{ $venue->venue_name }}</h2>
                            <p class="text-gray-600">{{ $venue->address }}</p>
                            <p class="text-gray-600 distance"></p>
                            <div id="pickup-times-{{ $venue->id }}" class="text-gray-600">Loading pickup times...</div>
                            <!-- Offers for each venue -->
                            <div class="mt-4 space-y-4">
                                @foreach ($venue->offers as $offer)
                                    <div class="offer-item flex items-center justify-between border-t border-gray-200 pt-2" data-price="{{ $offer->price }}" data-caloric="{{ $offer->caloric_content }}">
                                        <div class="flex items-center">
                                            <img src="{{ asset('storage/' . $offer->image_path) }}" alt="{{ $offer->name }}" class="w-16 h-16 object-cover rounded mr-4"> 
                                            <div>
                                                <h3 class="text-md font-bold offer-name">{{ $offer->name }}</h3>
                                                <p class="text-sm flex items-center">
                                                    <i class="fas fa-box-open mr-2"></i> 
                                                    {{ $offer->quantity }} available
                                                </p>
                                            </div>
                                        </div>
                                        <div class="text-right flex items-center">
                                            <p class="text-lg text-green-500 font-bold mr-4">{{ number_format($offer->price, 2) }}€</p>
                                            <button class="mr-2 text-lg" onclick="addToCart({{ $offer->id }})">
                                                <i class="fas fa-cart-plus text-blue-500 hover:text-blue-700 cursor-pointer"></i>
                                            </button>
                                            <input type="number" value="1" min="1" max="{{ $offer->quantity }}" class="quantity-field" id="quantity-{{ $offer->id }}">

                                            <button class="text-lg" onclick='openModal({
                                                id: {{ $offer->id }},
                                                image: "{{ asset('storage/' . $offer->image_path) }}",
                                                name: "{{ $offer->name }}",
                                                description: "{{ $offer->description }}",
                                                quantity: "{{ $offer->quantity }}",
                                                price: "{{ number_format($offer->price, 2) }}",
                                                cuisine_type: "{{ $offer->cuisine_type }}",
                                                caloric_content: "{{ $offer->caloric_content }}",
                                                dietary_restrictions: @json($offer->dietary_restrictions)
                                            })'>
                                                <i class="fas fa-info-circle text-gray-500 hover:text-gray-700 cursor-pointer"></i>
                                            </button>
                                        </div>
                                    </div>
                                @endforeach
                            </div>
                        </div>
                    @endif
                @endforeach
            </div>
            <!-- Right Column for Map -->
            <div class="w-full md:w-1/2 sticky-map">
                <div id="map"></div>
            </div>
        </div>
    </div>
    
    <!-- the modal here -->
    <div id="confirmationModal" class="hidden fixed inset-0 bg-black bg-opacity-50 overflow-y-auto h-full w-full" onclick="closeConfirmationModal()">
        <div class="relative top-20 mx-auto p-5 border w-1/3 shadow-lg rounded-md bg-white">
            <div class="flex justify-between items-center pb-3">
                <p class="text-2xl font-bold">Continue Shopping?</p>
                <div class="modal-close cursor-pointer z-50" onclick="closeConfirmationModal()">
                    <i class="fas fa-times"></i>
                </div>
            </div>
            <div class="text-center p-5">
                <button onclick="closeConfirmationModal()" class="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded">
                    Continue Shopping
                </button>
                <button onclick="window.location.href='/cart'" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded ml-4">
                    Go to Cart
                </button>
            </div>
        </div>
    </div>

    <footer class="text-center p-6 bg-gray-800 text-white mt-6">
        © 2024 ZeroWasteWagon. All rights reserved.
    </footer>
    
    <!-- Modal-->
    <div id="offerModal" class="hidden fixed inset-0 bg-black bg-opacity-50 overflow-y-auto h-full w-full" onclick="closeModal(event)">
        <!-- Modal content -->
        <div class="relative top-20 mx-auto p-5 border w-1/3 shadow-lg rounded-md bg-white">
            <!-- Close button (X icon) -->
            <div class="flex justify-between items-center pb-3">
                <p class="text-2xl font-bold">Offer Details</p>
                <div class="modal-close cursor-pointer z-50" onclick="closeModal(event)">
                    <i class="fas fa-times"></i>
                </div>
            </div>
            <!-- Dynamic content will be loaded here -->
            <div id="modalContent"></div>
        </div>
    </div>

    <!-- Leaflet JS -->
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/noUiSlider/14.7.0/nouislider.min.js"></script>
    <script>
    var map;  // Declare map in the global scope
    var userLat, userLng;
    var markers = {};
    var priceSlider, caloricSlider;

    function initMap() {
        map = L.map('map');  // Initialize map here

        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '© OpenStreetMap contributors'
        }).addTo(map);

        function addVenueMarkers() {
            @foreach ($venues as $venue)
                var venueIcon = L.divIcon({
                    className: 'custom-icon',
                    html: '<i class="fas fa-map-marker-alt"></i>' // using a Font Awesome icon
                });

                var marker = L.marker([{{ $venue->latitude }}, {{ $venue->longitude }}], {icon: venueIcon}).addTo(map);
                marker.bindPopup('<strong>{{ $venue->venue_name }}</strong><br>{{ $venue->address }}');
                markers[{{ $venue->id }}] = marker;
            @endforeach
        }

        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function(position) {
                userLat = position.coords.latitude;
                userLng = position.coords.longitude;
                map.setView([userLat, userLng], 13);

                var userIcon = L.divIcon({
                    className: 'user-icon',
                    html: '<i class="fas fa-user-circle"></i>' 
                });

                L.marker([userLat, userLng], {icon: userIcon}).addTo(map)
                    .bindPopup("You are here.").openPopup();

                addVenueMarkers();
                attachHoverEventToVenues();
                calculateDistances();
            }, function(error) {
                console.error("Geolocation error: " + error.message);
                alert("Geolocation error: " + error.message);
                var firstVenueLat = @json($venues->first()->latitude ?? 51.505);
                var firstVenueLng = @json($venues->first()->longitude ?? -0.09);
                map.setView([firstVenueLat, firstVenueLng], 13);
                addVenueMarkers();
                attachHoverEventToVenues();
            });
        } else {
            alert("Geolocation is not supported by this browser.");
            console.error("Geolocation is not supported by this browser.");
            var firstVenueLat = @json($venues->first()->latitude ?? 51.505);
            var firstVenueLng = @json($venues->first()->longitude ?? -0.09);
            map.setView([firstVenueLat, firstVenueLng], 13);
            addVenueMarkers();
            attachHoverEventToVenues();
        }
    }

    function calculateDistances() {
        document.querySelectorAll('.venue-item').forEach(item => {
            var lat = parseFloat(item.getAttribute('data-lat'));
            var lng = parseFloat(item.getAttribute('data-lng'));
            var distance = calculateDistance(userLat, userLng, lat, lng);
            item.querySelector('.distance').textContent = `Distance: ${distance.toFixed(2)} km`;
        });
    }

    function calculateDistance(lat1, lon1, lat2, lon2) {
        const R = 6371; // Radius of the Earth in km
        const dLat = deg2rad(lat2 - lat1);
        const dLon = deg2rad(lon2 - lon1);
        const a = 
            Math.sin(dLat / 2) * Math.sin(dLat / 2) +
            Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * 
            Math.sin(dLon / 2) * Math.sin(dLon / 2);
        const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
        return R * c; // Distance in km
    }

    function deg2rad(deg) {
        return deg * (Math.PI / 180);
    }

    function attachHoverEventToVenues() {
        document.querySelectorAll('.venue-item').forEach(item => {
            item.addEventListener('mouseover', function() {
                var lat = this.getAttribute('data-lat');
                var lng = this.getAttribute('data-lng');
                map.setView([lat, lng], 15);
            });
        });
    }

    function toggleDropdown(menuId) {
        document.getElementById(menuId).classList.toggle('hidden');
    }

    function sortVenuesByDistance() {
        const venuesArray = Array.from(document.querySelectorAll('.venue-item'));
        venuesArray.sort((a, b) => {
            const latA = parseFloat(a.getAttribute('data-lat'));
            const lngA = parseFloat(a.getAttribute('data-lng'));
            const latB = parseFloat(b.getAttribute('data-lat'));
            const lngB = parseFloat(b.getAttribute('data-lng'));
            const distanceA = calculateDistance(userLat, userLng, latA, lngA);
            const distanceB = calculateDistance(userLat, userLng, latB, lngB);
            return distanceA - distanceB;
        });
        const venuesContainer = document.getElementById('venues-container');
        venuesContainer.innerHTML = '';
        venuesArray.forEach(venue => {
            venuesContainer.appendChild(venue);
        });

        // Close the sort dropdown menu
        document.getElementById('sort-menu').classList.add('hidden');
    }

    function initializeSliders() {
        const offers = document.querySelectorAll('.offer-item');
        const prices = Array.from(offers).map(offer => parseFloat(offer.getAttribute('data-price')));
        const calorics = Array.from(offers).map(offer => parseFloat(offer.getAttribute('data-caloric')));
        const minPrice = Math.min(...prices);
        const maxPrice = Math.max(...prices);
        const minCaloric = Math.min(...calorics);
        const maxCaloric = Math.max(...calorics);

        // Check if sliders are already initialized
        if (priceSlider && caloricSlider) {
            priceSlider.noUiSlider.updateOptions({
                range: {
                    min: minPrice,
                    max: maxPrice
                }
            });
            caloricSlider.noUiSlider.updateOptions({
                range: {
                    min: minCaloric,
                    max: maxCaloric
                }
            });
        } else {
            priceSlider = document.getElementById('price-range');
            noUiSlider.create(priceSlider, {
                start: [minPrice, maxPrice],
                connect: true,
                range: {
                    min: minPrice,
                    max: maxPrice
                },
                tooltips: false,
                format: {
                    to: value => value.toFixed(2),
                    from: value => parseFloat(value)
                }
            });
            priceSlider.noUiSlider.on('update', function (values, handle) {
                document.getElementById('min-price-value').innerText = values[0];
                document.getElementById('max-price-value').innerText = values[1];
            });

            caloricSlider = document.getElementById('caloric-range');
            noUiSlider.create(caloricSlider, {
                start: [minCaloric, maxCaloric],
                connect: true,
                range: {
                    min: minCaloric,
                    max: maxCaloric
                },
                tooltips: false,
                format: {
                    to: value => value.toFixed(0),
                    from: value => parseFloat(value)
                }
            });
            caloricSlider.noUiSlider.on('update', function (values, handle) {
                document.getElementById('min-caloric-value').innerText = values[0];
                document.getElementById('max-caloric-value').innerText = values[1];
            });
        }
    }

    function applyFilters() {
        const priceRange = priceSlider.noUiSlider.get();
        const minPrice = parseFloat(priceRange[0]);
        const maxPrice = parseFloat(priceRange[1]);

        const caloricRange = caloricSlider.noUiSlider.get();
        const minCaloric = parseFloat(caloricRange[0]);
        const maxCaloric = parseFloat(caloricRange[1]);

        document.querySelectorAll('.offer-item').forEach(item => {
            const price = parseFloat(item.getAttribute('data-price'));
            const caloric = parseFloat(item.getAttribute('data-caloric'));

            if (
                (isNaN(minPrice) || price >= minPrice) &&
                (isNaN(maxPrice) || price <= maxPrice) &&
                (isNaN(minCaloric) || caloric >= minCaloric) &&
                (isNaN(maxCaloric) || caloric <= maxCaloric)
            ) {
                item.style.display = '';
            } else {
                item.style.display = 'none';
            }
        });

        // Close the filter dropdown menu
        document.getElementById('filter-menu').classList.add('hidden');
    }

    function filterVenuesBySearch(query) {
        const normalizedQuery = query.toLowerCase();

        document.querySelectorAll('.venue-item').forEach(venue => {
            const venueName = venue.querySelector('.venue-name').textContent.toLowerCase();
            let offerMatches = false;

            venue.querySelectorAll('.offer-item').forEach(offer => {
                const offerName = offer.querySelector('.offer-name').textContent.toLowerCase();
                if (venueName.includes(normalizedQuery) || offerName.includes(normalizedQuery)) {
                    offer.style.display = '';
                    offerMatches = true;
                } else {
                    offer.style.display = 'none';
                }
            });

            if (venueName.includes(normalizedQuery) || offerMatches) {
                venue.style.display = '';
            } else {
                venue.style.display = 'none';
            }
        });
    }

    function openModal(offer) {
        document.getElementById('offerModal').classList.remove('hidden');

        const dietaryRestrictions = offer.dietary_restrictions ? JSON.parse(offer.dietary_restrictions) : [];
        let dietaryRestrictionsHtml = '';
        if (dietaryRestrictions.length > 0) {
            dietaryRestrictionsHtml = `<p><strong>Dietary:</strong> ${dietaryRestrictions.join(', ')}</p>`;
        }

        const modalContent = `
            <img src="${offer.image}" alt="${offer.name}" class="w-full h-64 object-cover rounded-t-lg mb-4">
            <h3 class="text-lg font-bold">${offer.name}</h3>
            <p>${offer.description}</p>
            <p><strong>Quantity:</strong> ${offer.quantity} available</p>
            <p><strong>Price:</strong> €${offer.price}</p>
            <p><strong>Cuisine Type:</strong> ${offer.cuisine_type}</p>
            <p><strong>Caloric Content:</strong> ${offer.caloric_content} calories</p>
            ${dietaryRestrictionsHtml}
            <input type="number" value="1" min="1" max="${offer.quantity}" class="quantity-field" id="modal-quantity-${offer.id}">
            <button class="mr-2 text-lg" onclick="addToCart(${offer.id}, 'modal-quantity-${offer.id}')">
                <i class="fas fa-cart-plus text-blue-500 hover:text-blue-700 cursor-pointer"> Add to Cart</i>
            </button>
        `;
        document.getElementById('modalContent').innerHTML = modalContent;
    }

    function addToCart(offerId, quantityFieldId = null) {
        var quantity = quantityFieldId ? document.getElementById(quantityFieldId).value : document.getElementById('quantity-' + offerId).value;
        fetch('/user/add-to-cart', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').content
            },
            body: JSON.stringify({ offerId, quantity })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // Display the confirmation modal on successful add
                document.getElementById('confirmationModal').classList.remove('hidden');
            } else {
                alert('Failed to add item to cart.');
            }
        })
        .catch(error => {
            console.error('Error adding item to cart:', error);
            alert('Error adding item to cart.');
        });
    }

    function closeConfirmationModal() {
        document.getElementById('confirmationModal').classList.add('hidden');
    }

    function closeModal(event) {
        // Close the modal only if the user clicks on the modal background or the close button
        if (event.target === document.getElementById('offerModal') || event.target.closest('.modal-close')) {
            document.getElementById('offerModal').classList.add('hidden');
        }
    }

    document.getElementById('refresh-button').addEventListener('click', function() {
        fetch('/user/dashboard', {
            method: 'GET',
            headers: {
                'Accept': 'application/json',
                'X-Requested-With': 'XMLHttpRequest',
                'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').content
            }
        })
        .then(response => response.json())
        .then(data => {
            const venuesContainer = document.getElementById('venues-container');
            venuesContainer.innerHTML = ''; // Clear existing content

            data.forEach(venue => {
                if (venue.offers.length > 0) {
                    let venueHTML = `
                        <div id="venue-${venue.id}" class="venue-item bg-white p-4 rounded-lg shadow mb-4" data-lat="${venue.latitude}" data-lng="${venue.longitude}">
                            <h2 class="font-bold text-lg venue-name">${venue.venue_name}</h2>
                            <p class="text-gray-600">${venue.address}</p>
                            <p class="text-gray-600 distance"></p>
                            <div class="mt-4 space-y-4">`;

                    venue.offers.forEach(offer => {
                        venueHTML += `
                            <div class="offer-item flex items-center justify-between border-t border-gray-200 pt-2" data-price="${offer.price}" data-caloric="${offer.caloric_content}">
                                <div class="flex items-center">
                                    <img src="/storage/${offer.image_path}" alt="${offer.name}" class="w-16 h-16 object-cover rounded mr-4">
                                    <div>
                                        <h3 class="text-md font-bold offer-name">${offer.name}</h3>
                                        <p class="text-sm flex items-center">
                                            <i class="fas fa-box-open mr-2"></i>
                                            ${offer.quantity} available
                                        </p>
                                    </div>
                                </div>
                                <div class="text-right flex items-center">
                                    <p class="text-lg text-green-500 font-bold mr-4">${parseFloat(offer.price).toFixed(2)}€</p>
                                    <button class="mr-2 text-lg" onclick="addToCart(${offer.id})">
                                        <i class="fas fa-cart-plus text-blue-500 hover:text-blue-700 cursor-pointer"></i>
                                    </button>
                                    <input type="number" value="1" min="1" max="${offer.quantity}" class="quantity-field" id="quantity-${offer.id}">
                                    <button class="text-lg" onclick='openModal({
                                        id: ${offer.id},
                                        image: "/storage/${offer.image_path}",
                                        name: "${offer.name}",
                                        description: "${offer.description}",
                                        quantity: "${offer.quantity}",
                                        price: "${parseFloat(offer.price).toFixed(2)}",
                                        cuisine_type: "${offer.cuisine_type}",
                                        caloric_content: "${offer.caloric_content}",
                                        dietary_restrictions: ${JSON.stringify(offer.dietary_restrictions)}
                                    })'>
                                        <i class="fas fa-info-circle text-gray-500 hover:text-gray-700 cursor-pointer"></i>
                                    </button>
                                </div>
                            </div>`;
                    });

                    venueHTML += `
                            </div>
                        </div>`;
                    
                    venuesContainer.innerHTML += venueHTML;
                }
            });

            attachHoverEventToVenues();
            calculateDistances();
            initializeSliders();
        })
        .catch(error => {
            console.error('Error refreshing venues and offers:', error);
            alert('Failed to refresh content. Please try again.');
        });
    });

    document.getElementById('search-input').addEventListener('input', function() {
        filterVenuesBySearch(this.value);
    });
    function fetchPickupTimesForToday() {
        fetch('/pickup-times-today', {
            headers: {
                'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
            }
        })
        .then(response => response.json())
        .then(data => {
            document.querySelectorAll('[id^="pickup-times-"]').forEach(element => {
                element.innerHTML = 'No pickups today'; // Default message for all venues
            });

            data.forEach(pickupTime => {
                const venueElement = document.getElementById(`pickup-times-${pickupTime.partner_id}`);
                if (venueElement) {
                    if (pickupTime.start_time && pickupTime.end_time) {
                        venueElement.innerHTML = `Pickup Time: ${pickupTime.start_time} - ${pickupTime.end_time}`;
                    } else {
                        venueElement.innerHTML = 'Pickup Time: No pickups today';
                    }
                }
            });
        })
        .catch(error => {
            console.error('Error fetching pickup times:', error);
        });
    }

    document.addEventListener('DOMContentLoaded', function() {
        initMap();
        initializeSliders();
        fetchPickupTimesForToday();
    });
    </script>

</body>
</html>


----------------------------------------
Filename: /var/www/zerowastewagon/example-app/resources/views/landing.blade.php
Contents:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ZeroWasteWagon</title>
    @vite(['resources/css/app.css', 'resources/js/app.js'])
</head>
<body class="min-h-screen flex flex-col justify-between bg-gray-100">

    <header class="flex justify-between items-center p-6 bg-green-500 text-white">
        <h1 class="text-3xl font-sans">ZeroWasteWagon</h1>
        <div class="space-x-4 flex items-center">
            <a href="/about-us" class="hover:underline">@lang('main.about')</a>
            <a href="{{ route('locale', 'lt') }}" class="hover:underline">Lietuvių</a>
            <a href="{{ route('locale', 'en') }}" class="hover:underline">English</a>
            <div class="relative" id="loginDropdown">
                <button class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-md shadow-lg hover:shadow-xl focus:shadow-xl focus:outline-none focus:ring-2 focus:ring-blue-700 focus:ring-offset-2 transition duration-150 ease-in-out dropdown-btn">@lang('main.login')</button>
                <div class="absolute right-0 mt-2 py-2 w-48 bg-white rounded-md  hover:shadow-xl focus:shadow-xl focus:outline-none focus:ring-2 focus:ring-blue-700 focus:ring-offset-2 transition duration-150 ease-in-out shadow-xl hidden z-10" id="dropdownContent">
                    <div class="mb-3">
                        <a href="{{ route('login') }}" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-md shadow-lg hover:shadow-xl focus:shadow-xl focus:outline-none focus:ring-2 focus:ring-blue-700 focus:ring-offset-2 transition duration-150 ease-in-out">@lang('main.user')</a>
                    </div>
                    <div>
                        <a href="{{ route('partner.login.form') }}"  class="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded-md">@lang('main.partner')</a>
                
                     </div>    
                </div>
            </div>
        </div>
    </header>


    <div class="flex flex-col justify-center p-6 pb-12">
        <div class="mx-auto max-w-md">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" height="100px" width="100px" class="mx-auto text-green-600 w-6 h-6">
                <path stroke-linecap="round" stroke-linejoin="round" d="M18 18.72a9.094 9.094 0 0 0 3.741-.479 3 3 0 0 0-4.682-2.72m.94 3.198.001.031c0 .225-.012.447-.037.666A11.944 11.944 0 0 1 12 21c-2.17 0-4.207-.576-5.963-1.584A6.062 6.062 0 0 1 6 18.719m12 0a5.971 5.971 0 0 0-.941-3.197m0 0A5.995 5.995 0 0 0 12 12.75a5.995 5.995 0 0 0-5.058 2.772m0 0a3 3 0 0 0-4.681 2.72 8.986 8.986 0 0 0 3.74.477m.94-3.197a5.971 5.971 0 0 0-.94 3.197M15 6.75a3 3 0 1 1-6 0 3 3 0 0 1 6 0Zm6 3a2.25 2.25 0 1 1-4.5 0 2.25 2.25 0 0 1 4.5 0Zm-13.5 0a2.25 2.25 0 1 1-4.5 0 2.25 2.25 0 0 1 4.5 0Z" />
            </svg>
            <h2 class="mt-6 text-3xl font-bold text-gray-900">@lang('main.welcome')</h2> 
        </div>
        <div class="mt-5 p-1 mx-auto rounded-xl">
            <h2 class="mt-6 text-xl font-bold text-gray-900">@lang('main.join_us')</h2>
        </div>

        <div class="text-center flex max-w-md p-6 mx-auto space-x-4">
            <a href="{{ route('register') }}" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-md shadow-lg hover:shadow-xl focus:shadow-xl focus:outline-none focus:ring-2 focus:ring-blue-700 focus:ring-offset-2 transition duration-150 ease-in-out">
                @lang('main.start_eating')
            </a>
            <a href="{{ route('partner.registration.step1') }}" class="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded-md shadow-lg hover:shadow-xl focus:shadow-xl focus:outline-none focus:ring-2 focus:ring-blue-700 focus:ring-offset-2 transition duration-150 ease-in-out">
                @lang('main.start_selling')
            </a>
        </div>
    </div>

    <!-- <div class="bg-white/80 backdrop-blur-xl mt-10 p-10 mx-auto rounded-xl shadow-xl">
       <h2 class="mt-6 text-xl font-bold text-gray-900">Join us on this journey toward a more sustainable future.</h2>
    </div> -->


    <!-- <div class="flex flex-col justify-center border border-green-700 bg-white/50 bacdrop-blur-xl p-6">
        <div class="border border-green-700 text-center mx-auto max-w-md p-10 bg-white/50 bacdrop-blur-xl mt-10 rounded-xl shadow-xl">
            <h2 class="text-3xl font-bold text-gray-900">Welcome to ZeroWasteWagon</h2>
            <p class="mb-4">Join us on this journey toward a more sustainable future.</p>
            <div class="flex text-center mx-auto space-x-4">
                <a href="{{ route('register') }}" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-md shadow-lg hover:shadow-xl focus:shadow-xl focus:outline-none focus:ring-2 focus:ring-blue-700 focus:ring-offset-2 transition duration-150 ease-in-out">
                    Start Eating
                </a>
                <a href="{{ route('partner.registration.step1') }}" class="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded-md shadow-lg hover:shadow-xl focus:shadow-xl focus:outline-none focus:ring-2 focus:ring-blue-700 focus:ring-offset-2 transition duration-150 ease-in-out">
                    Start Selling
                </a>
            </div>
        </div>
    </div> -->

    <footer class="text-center p-6 bg-gray-800 text-white">
        @lang('main.footer')
    </footer>

    

    <script>
        document.getElementById('loginDropdown').addEventListener('click', function() {
            document.getElementById('dropdownContent').classList.toggle('hidden');
        });
    </script>
</body>
</html>

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/resources/views/partner_dashboard.blade.php
Contents:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ZeroWasteWagon-Partner Dashboard</title>
    @vite(['resources/css/app.css', 'resources/js/app.js'])
</head>
<body class="bg-gray-50">
    <header class="flex justify-between items-center p-6 bg-green-500 text-white">
        <h1 class="text-3xl">ZeroWasteWagon</h1>
        <div class="space-x-4 flex items-center">
            <a href="{{ route('locale', 'lt') }}" class="hover:underline">Lietuvių</a>
            <a href="{{ route('locale', 'en') }}" class="hover:underline">English</a>
            <a href="{{ route('partner.account') }}" class="hover:underline">@lang('main.acount_info')</a>
            <a href="/" class="hover:underline">@lang('main.logout')</a>

        </div>
    </header>

    <div class="container mx-auto px-4 py-8">
        <div class="text-center">
            <h2 class="text-2xl mb-4">@lang('main.pa_dashboard')</h2>
            <p class="mb-4">@lang('main.pa_dash_description')</p>
            <div class="space-x-4 mt-4">
                <a href="{{ route('offers.create') }}" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">@lang('main.new_offer')</a>
                <a href="{{ route('offers.index') }}" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">@lang('main.view_offers')</a>
                <a href="{{ route('partner.orders') }}" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">@lang('main.view_orders')</a>
            </div>
        </div>
    </div>

    <footer class="text-center p-6 bg-gray-800 text-white">
        @lang('main.footer')
    </footer>
</body>
</html>

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/resources/views/user_account.blade.php
Contents:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Account Information</title>
    @vite(['resources/css/app.css', 'resources/js/app.js'])
</head>
<body class="bg-gray-50">
    <header class="flex justify-between items-center p-6 bg-green-500 text-white">
        <h1 class="text-3xl">Account Information</h1>
        <a href="{{ route('dashboard') }}" class="hover:underline text-white">Home</a>
    </header>

    <div class="container mx-auto mt-4 p-4 bg-white shadow-md rounded">
        @if(session('success'))
            <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative" role="alert">
                {{ session('success') }}
            </div>
        @endif

        <h2 class="text-2xl mb-4">Account Details</h2>
        <p><strong>Name:</strong> {{ $user->name }}</p>
        <p><strong>Email:</strong> {{ $user->email }}</p>

        <h2 class="text-2xl mt-6 mb-4">Change Password</h2>
        <form action="{{ route('user.update-password') }}" method="POST">
            @csrf
            <div class="mb-4">
                <label for="current_password" class="block text-gray-700">Current Password</label>
                <input type="password" name="current_password" id="current_password" class="border rounded w-full py-2 px-3 mt-1" required>
                @error('current_password')
                    <span class="text-red-500">{{ $message }}</span>
                @enderror
            </div>
            <div class="mb-4">
                <label for="new_password" class="block text-gray-700">New Password</label>
                <input type="password" name="new_password" id="new_password" class="border rounded w-full py-2 px-3 mt-1" required>
                @error('new_password')
                    <span class="text-red-500">{{ $message }}</span>
                @enderror
            </div>
            <div class="mb-4">
                <label for="new_password_confirmation" class="block text-gray-700">Confirm New Password</label>
                <input type="password" name="new_password_confirmation" id="new_password_confirmation" class="border rounded w-full py-2 px-3 mt-1" required>
            </div>
            <button type="submit" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">Update Password</button>
        </form>
    </div>
</body>
</html>

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/resources/views/layouts/app.blade.php
Contents:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@yield('title', 'Your Site Title')</title>
    @vite(['resources/css/app.css', 'resources/js/app.js'])
</head>
<body>
    <header>
        <!-- Your navigation -->
    </header>

    <main>
        @yield('content')
    </main>

    <footer>
        <!-- Your footer -->
    </footer>
</body>
</html>

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/resources/views/create_offer.blade.php
Contents:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Create Offer</title>
    @vite(['resources/css/app.css', 'resources/js/app.js'])
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
    .active {
        background-color: white !important; /* Override background color */
        color: black !important; /* Change text color for visibility */
        border: 2px solid; /* Optional: add border to maintain visibility */
    }
    </style>
</head>
<body class="bg-gray-100">
    <header class="flex justify-between items-center p-6 bg-green-500 text-white">
        <h1 class="text-3xl">ZeroWasteWagon</h1>
        <div class="space-x-4 flex items-center">
            <a href="{{ route('locale', 'lt') }}" class="hover:underline">Lietuvių</a>
            <a href="{{ route('locale', 'en') }}" class="hover:underline">English</a>
            <a href="#" class="hover:underline">@lang('main.acount_info')</a>
            <a href="/" class="hover:underline">@lang('main.logout')</a>
        </div>
    </header>
    <div class="container mx-auto p-8">
        <div class="flex justify-between items-center mb-4">
            <h1 class="text-3xl font-bold text-green-700">@lang('main.create_offer_sescription')</h1>
            <a href="{{ route('partner.dashboard') }}" class="bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded">@lang('main.return_to_dashboard')</a>
        </div>
                <!-- Error Messages -->
            @if ($errors->any())
            <div class="bg-red-500 text-white font-bold rounded-t px-4 py-2">
                Error creating the offer. Please check your inputs.
            </div>
            <div class="border border-t-0 border-red-400 rounded-b bg-red-100 px-4 py-3 text-red-700">
                <ul>
                    @foreach ($errors->all() as $error)
                        <li>{{ $error }}</li>
                    @endforeach
                </ul>
            </div>
            @endif

            @if (session('success'))
            <div class="bg-green-500 text-white font-bold rounded-t px-4 py-2">
                {{ session('success') }}
            </div>
            @endif

        <form action="{{ route('offers.store') }}" method="POST" enctype="multipart/form-data" class="space-y-4">
            @csrf
            <div class="flex flex-wrap -mx-2">
                <!-- Left Column -->
                <div class="w-full md:w-1/2 px-2 mb-4">
                    <div>
                        <label for="name" class="block text-sm font-medium text-gray-700">@lang('main.pa_offer_name')</label>
                        <input type="text" id="name" name="name" required class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-green-500 focus:border-green-500 sm:text-sm">
                    </div>
                    <div>
                        <label for="description" class="block text-sm font-medium text-gray-700">@lang('main.pa_offer_description')</label>
                        <textarea id="description" name="description" required class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-green-500 focus:border-green-500 sm:text-sm"></textarea>
                    </div>
                    <div>
                        <label for="price" class="block text-sm font-medium text-gray-700">@lang('main.pa_offer_price')</label>
                        <input type="number" id="price" name="price" step="0.01" required class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-green-500 focus:border-green-500 sm:text-sm">
                    </div>
                    <div>
                        <label for="quantity" class="block text-sm font-medium text-gray-700">@lang('main.pa_offer_quantity')</label>
                        <input type="number" id="quantity" name="quantity" required class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-green-500 focus:border-green-500 sm:text-sm">
                    </div>
                    <div>
                        <label for="image" class="block text-sm font-medium text-gray-700">@lang('main.pa_offer_image')</label>
                        <input type="file" id="image" name="image" class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-green-500 focus:border-green-500 sm:text-sm">
                    </div>
                </div>
                <!-- Right Column -->
                <div class="w-full md:w-1/2 px-2 mb-4">
                <div>
                <label for="cuisine_type" class="block text-sm font-medium text-gray-700">@lang('main.cuisine_type')</label>
                <select id="cuisine_type" name="cuisine_type" class="mt-1 block w-full pl-3 pr-10 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-green-500 focus:border-green-500 sm:text-sm">
                <option value="">@lang('main.cuisine_select')</option>
                <option value="Italian">@lang('main.it')</option>
                <option value="Mexican">@lang('main.me')</option>
                <option value="Chinese">@lang('main.ch')</option>
                <option value="Indian">@lang('main.ind')</option>
                <option value="French">@lang('main.fr')</option>
                </select>
                </div>
                <div class="mt-4">
                    <label for="dietary_restrictions" class="block text-sm font-medium text-gray-700">Dietary Restrictions:</label>
                    <div class="flex flex-wrap gap-2 mt-2">
                        <!-- Stylized buttons for dietary restrictions -->
                        <button type="button" class="bg-green-500 text-white rounded px-4 py-2 shadow inline-flex items-center" onclick="toggleCheckbox('vegan')">
                            <i class="fas fa-leaf mr-2"></i> @lang('main.vegan')
                        </button>
                        <button type="button" class="bg-blue-500 text-white rounded px-4 py-2 shadow inline-flex items-center" onclick="toggleCheckbox('gluten_free')">
                            <i class="fas fa-bread-slice mr-2"></i> @lang('main.gluten')
                        </button>
                        <button type="button" class="bg-purple-500 text-white rounded px-4 py-2 shadow inline-flex items-center" onclick="toggleCheckbox('vegetarian')">
                            <i class="fas fa-carrot mr-2"></i> @lang('main.vegeterian')
                        </button>
                        <button type="button" class="bg-red-500 text-white rounded px-4 py-2 shadow inline-flex items-center" onclick="toggleCheckbox('keto')">
                            <i class="fas fa-bacon mr-2"></i> Keto
                        </button>
                        <button type="button" class="bg-yellow-500 text-white rounded px-4 py-2 shadow inline-flex items-center" onclick="toggleCheckbox('paleo')">
                            <i class="fas fa-drumstick-bite mr-2"></i> Paleo
                        </button>
                        <button type="button" class="bg-teal-500 text-white rounded px-4 py-2 shadow inline-flex items-center" onclick="toggleCheckbox('dairy_free')">
                            <i class="fas fa-cheese mr-2"></i> @lang('main.dairy')
                        </button>
                    </div>
                </div>
                <div>
                    <label for="caloric_content" class="block text-sm font-medium text-gray-700">@lang('main.caloric_content')</label>
                    <input type="number" id="caloric_content" name="caloric_content" class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-green-500 focus:border-green-500 sm:text-sm" placeholder="@lang('main.kcal_paceholder')">
                </div>
            </div>
            <!-- Hidden checkboxes for form submission -->
<input type="checkbox" id="vegan" name="dietary_restrictions[]" value="vegan" hidden>
<input type="checkbox" id="gluten_free" name="dietary_restrictions[]" value="gluten_free" hidden>
<input type="checkbox" id="vegetarian" name="dietary_restrictions[]" value="vegetarian" hidden>
<input type="checkbox" id="keto" name="dietary_restrictions[]" value="keto" hidden>
<input type="checkbox" id="paleo" name="dietary_restrictions[]" value="paleo" hidden>
<input type="checkbox" id="dairy_free" name="dietary_restrictions[]" value="dairy_free" hidden>
            </div>
            <button type="submit" class="inline-block bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded">
                @lang('main.submit_order')
            </button>
        </form>
    </div>
    <footer class="text-center p-6 bg-gray-800 text-white">
        @lang('main.footer')
    </footer>
    <script>
    function toggleCheckbox(value) {
        var checkbox = document.getElementById(value);
        var button = document.querySelector(`button[onclick="toggleCheckbox('${value}')"]`);
        if (checkbox) {
            checkbox.checked = !checkbox.checked; // Toggle the state of the checkbox
            button.classList.toggle('active'); // Toggle a class that changes the appearance
        }
    }
</script>
</body>
</html>

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/resources/views/partner_login.blade.php
Contents:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Partner Login</title>
    @vite(['resources/css/app.css', 'resources/js/app.js'])
</head>
<body class="bg-gray-50">
    <header class="flex justify-between items-center p-6 bg-green-500 text-white">
        <h1 class="text-3xl font-sans">ZeroWasteWagon</h1>
        <div class="space-x-4 flex items-center">
            <a href="/about-us" class="hover:underline">About Us</a>
            <a href="{{ route('locale', 'lt') }}" class="hover:underline">Lietuvių</a>
            <a href="{{ route('locale', 'en') }}" class="hover:underline">English</a>
    </header>
    <div class="flex items-center justify-center min-h-screen">
        <div class="bg-white p-8 rounded-lg shadow-md w-full max-w-md">
            <h2 class="text-2xl font-bold mb-6 text-center">@lang('main.pa_login')</h2>
             <!-- Error Message Display Starts Here -->
             @if ($errors->any())
    <div role="alert">
        <strong class="font-bold">Whoops!</strong>
        <span class="block sm:inline">{{ $errors->first('email') }}</span>
    </div>
            @endif
            <form action="{{ route('partner.login') }}" method="POST">
                @csrf
                <div class="mb-4">
                    <input type="email" name="email" placeholder="Email" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" required>
                </div>
                <div class="mb-4">
                    <input type="password" name="password" placeholder="@lang('main.password')" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" required>
                </div>
                <div class="flex justify-center">
                    <button type="submit" class="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline">@lang('main.login')</button>
                </div>
            </form>
        </div>
    </div>
</body>
</html>

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/resources/views/orders.blade.php
Contents:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Partner Orders</title>
    @vite(['resources/css/app.css', 'resources/js/app.js'])
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        .order-group {
            margin-bottom: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            overflow: hidden;
        }
        .order-date {
            background-color: #f8f8f8;
            padding: 15px;
            cursor: pointer;
            display: flex;
            justify-content: space-between;
            align-items: center;
            font-size: 1.1em;
            font-weight: bold;
        }
        .order-details {
            display: none;
            margin-top: 10px;
        }
        .order-summary {
            background-color: #e0e0e0;
            padding: 15px;
            margin-top: 10px;
            cursor: pointer;
            display: flex;
            justify-content: space-between;
            align-items: center;
            font-size: 1em;
            border-top: 1px solid #ccc;
        }
        .order-info {
            display: none;
            margin-top: 10px;
            padding: 15px;
            background-color: #f9f9f9;
            border: 1px solid #e0e0e0;
            border-radius: 8px;
            display: flex;
            justify-content: space-between;
        }
        .order-info img {
            max-width: 150px;
            border-radius: 5px;
            margin-top: 10px;
        }
        .order-info p {
            margin: 5px 0;
        }
        .order-info-left,
        .order-info-right {
            width: 48%;
        }
    </style>
</head>
<body class="bg-gray-100">
    <header class="flex justify-between items-center p-6 bg-green-500 text-white">
        <h1 class="text-3xl">ZeroWasteWagon</h1>
        <div class="space-x-4 flex items-center">
            <a href="{{ route('locale', 'lt') }}" class="hover:underline">Lietuvių</a>
            <a href="{{ route('locale', 'en') }}" class="hover:underline">English</a>
            <a href="#" class="hover:underline">@lang('main.acount_info')</a>
            <a href="#" class="hover:underline">@lang('main.logout')</a>
        </div>
    </header>
    <div class="container mx-auto p-8">
        <div class="flex justify-between items-center mb-4">
            <h1 class="text-3xl font-bold text-green-700">@lang('main.orders_from_your_store')</h1>
            <a href="{{ route('partner.dashboard') }}" class="bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded">@lang('main.return_to_dashboard')</a>
        </div>
        <div>
            @php
                $groupedOrders = $orders->groupBy(function($order) {
                    return \Carbon\Carbon::parse($order->created_at)->format('Y-m-d');
                });
            @endphp
            @foreach ($groupedOrders as $date => $orders)
                <div class="order-group">
                    <div class="order-date" onclick="toggleOrderDetails('{{ $date }}')">
                        <strong>{{ $date }}</strong>
                        <i class="fas fa-chevron-down"></i>
                    </div>
                    <div class="order-details" id="details-{{ $date }}">
                        @foreach ($orders as $order)
                            <div class="order-summary" onclick="toggleOrderInfo('{{ $order->id }}')">
                                <span>{{ $order->user->name }} - {{ $order->offer->name }}</span>
                                <i class="fas fa-chevron-down"></i>
                            </div>
                            <div class="order-info" id="info-{{ $order->id }}">
                                <div class="order-info-left">
                                    <p><strong>@lang('main.pa_offer_name')</strong> {{ $order->offer->name }}</p>
                                    <p><strong>@lang('main.pa_offer_quantity')</strong> {{ $order->quantity }}</p>
                                    <p><strong>@lang('main.total_price')</strong> {{ number_format($order->offer->price * $order->quantity, 2) }}€</p>
                                    <p><strong>@lang('main.paid')</strong> {{ $order->paid ? 'Yes' : 'No' }}</p>
                                    <p><strong>@lang('main.pa_offer_description')</strong> {{ $order->offer->description }}</p>
                                    <p><strong>@lang('main.pa_offer_image')</strong></p>
                                    <img src="{{ asset('storage/' . $order->offer->image_path) }}" alt="{{ $order->offer->name }}">
                                    <p><strong>@lang('main.order_time')</strong> {{ \Carbon\Carbon::parse($order->created_at)->format('H:i:s') }}</p>
                                </div>
                                <div class="order-info-right">
                                    <p><strong>@lang('main.user_name')</strong> {{ $order->user->name }}</p>
                                    <p><strong>@lang('main.user_email')</strong> {{ $order->user->email }}</p>
                                </div>
                            </div>
                        @endforeach
                    </div>
                </div>
            @endforeach
        </div>
    </div>
    <footer class="text-center p-6 bg-gray-800 text-white">
        @lang('main.footer')
    </footer>

    <script>
        function toggleOrderDetails(date) {
            var detailsElement = document.getElementById('details-' + date);
            var icon = detailsElement.previousElementSibling.querySelector('i');
            if (detailsElement.style.display === 'none' || detailsElement.style.display === '') {
                detailsElement.style.display = 'block';
                icon.classList.remove('fa-chevron-down');
                icon.classList.add('fa-chevron-up');
            } else {
                detailsElement.style.display = 'none';
                icon.classList.remove('fa-chevron-up');
                icon.classList.add('fa-chevron-down');
            }
        }

        function toggleOrderInfo(orderId) {
            var infoElement = document.getElementById('info-' + orderId);
            var icon = infoElement.previousElementSibling.querySelector('i');
            if (infoElement.style.display === 'none' || infoElement.style.display === '') {
                infoElement.style.display = 'block';
                icon.classList.remove('fa-chevron-down');
                icon.classList.add('fa-chevron-up');
            } else {
                infoElement.style.display = 'none';
                icon.classList.remove('fa-chevron-up');
                icon.classList.add('fa-chevron-down');
            }
        }
    </script>
</body>
</html>

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/resources/views/auth/login.blade.php
Contents:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Login</title>
    @vite(['resources/css/app.css', 'resources/js/app.js'])
</head>
<body class="min-h-screen flex flex-col bg-gray-100">
    <header class="flex justify-between items-center p-6 bg-green-500 text-white">
        <h1 class="text-3xl font-sans">ZeroWasteWagon</h1>
        <div class="space-x-4 flex items-center">
            <a href="/about-us" class="hover:underline">About Us</a>
            <a href="{{ route('locale', 'lt') }}" class="hover:underline">Lietuvių</a>
            <a href="{{ route('locale', 'en') }}" class="hover:underline">English</a>
    </header>
    
    <div class="flex flex-col justify-center p-6 pb-12">
        <div class="mx-auto max-w-md p-6">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" height="85px" width="85px" class="mx-auto text-green-600 w-6 h-6">
                <path stroke-linecap="round" stroke-linejoin="round" d="M17.982 18.725A7.488 7.488 0 0 0 12 15.75a7.488 7.488 0 0 0-5.982 2.975m11.963 0a9 9 0 1 0-11.963 0m11.963 0A8.966 8.966 0 0 1 12 21a8.966 8.966 0 0 1-5.982-2.275M15 9.75a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z" />
            </svg>
            <h2 class="mt-6 text-3xl font-bold text-gray-900">@lang('main.user_login')</h2> 
        </div>
    </div>

    <div class="pb-12 flex items-center justify-center">
        <div class="bg-white/80 p-8 rounded-sl shadow-md shodow-xl backdrop-blur-lg w-full max-w-md">
            <h2 class="text-2xl font-bold mb-6 text-center">@lang('main.user_login_2')</h2>
            <ul>
                @foreach ($errors->all() as $message)
                    <li>{{ $message }}</li>
                @endforeach
            </ul>
            <form action="{{ route('login') }}" method="post" autocomplete="off">
                @csrf
                <div>   
                    <label for="name" class="mb-2 block text-sm font-medium text-gray-700">Email</label> 
                    <div class="mb-4">
                        <input type="text" name="email" placeholder="smth@gmail.com" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:shadow-xl focus:outline-none focus:ring-2 focus:ring-blue-700 focus:ring-offset-2" required>
                    </div>
                </div>
                
                <div>
                    <label for="name" class="mb-2 block text-sm font-medium text-gray-700">@lang('main.password')</label>
                    <div class="mb-4">
                        <input type="password" name="password" placeholder="Password" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:shadow-xl focus:outline-none focus:ring-2 focus:ring-blue-700 focus:ring-offset-2" required>
                    </div>
                </div>
                <div class="flex justify-center">
                    <button type="submit" class="mb-3 bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded-md shadow-lg hover:shadow-xl focus:shadow-xl focus:outline-none focus:ring-2 focus:ring-blue-700 focus:ring-offset-2 transition duration-150 ease-in-out">@lang('main.login')</button>
                </div>
            </form>
            <a href="/register" class="flex justify-center hover:underline">@lang('main.user_have_no_account')</a>
        </div>
    </div>
    
    <!-- <footer class="text-center p-6 bg-gray-800 text-white">
        © 2024 ZeroWasteWagon. All rights reserved.
    </footer> -->
</body>
</html>

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/resources/views/auth/register.blade.php
Contents:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User registration</title>
    @vite(['resources/css/app.css', 'resources/js/app.js'])
</head>
<body class="min-h-screen flex flex-col bg-gray-100">
    <header class="flex justify-between items-center p-6 bg-green-500 text-white">
        <h1 class="text-3xl font-sans">ZeroWasteWagon</h1>
        <div class="space-x-4 flex items-center">
            <a href="/about-us" class="hover:underline">About Us</a>
            <a href="{{ route('locale', 'lt') }}" class="hover:underline">Lietuvių</a>
            <a href="{{ route('locale', 'en') }}" class="hover:underline">English</a>
    </header>
    
    <div class="flex flex-col justify-center p-6 pb-12">
        <div class="mx-auto max-w-md p-6">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" height="85px" width="85px" class="mx-auto text-green-600 w-6 h-6">
                <path stroke-linecap="round" stroke-linejoin="round" d="M17.982 18.725A7.488 7.488 0 0 0 12 15.75a7.488 7.488 0 0 0-5.982 2.975m11.963 0a9 9 0 1 0-11.963 0m11.963 0A8.966 8.966 0 0 1 12 21a8.966 8.966 0 0 1-5.982-2.275M15 9.75a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z" />
            </svg>
            <h2 class="mt-6 text-3xl font-bold text-gray-900">@lang('main.user_create_acc')</h2> 
        </div>
    </div>


    <div class="pb-12 flex items-center justify-center">
        <div class="bg-white/80 p-8 rounded-sl shadow-md shodow-xl backdrop-blur-lg w-full max-w-md">
            <h2 class="text-2xl font-bold mb-6 text-center">@lang('main.user_info')</h2>
            <ul>
                @foreach ($errors->all() as $message)
                    <li>{{ $message }}</li>
                @endforeach
            </ul>
            <form action="{{ route('register') }}" method="post" autocomplete="off">
                @csrf
                <div>
                    <label for="name" class="mb-2 block text-sm font-medium text-gray-700">@lang('main.name')</label>
                    <div class="mb-4">
                        <input type="text" name="name" placeholder="John Doe" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:shadow-xl focus:outline-none focus:ring-2 focus:ring-blue-700 focus:ring-offset-2" required>
                    </div>
                </div>

                <div>
                    <label for="email" class="mb-2 block text-sm font-medium text-gray-700">Email</label>
                    <div class="mb-4">
                        <input type="text" name="email" placeholder="Email" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:shadow-xl focus:outline-none focus:ring-2 focus:ring-blue-700 focus:ring-offset-2" required>
                    </div>
                </div>

                <div>
                    <label for="Password" class="mb-2 block text-sm font-medium text-gray-700">@lang('main.password')</label>
                    <div class="mb-4">
                        <input type="password" name="password" placeholder="password123"  class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:shadow-xl focus:outline-none focus:ring-2 focus:ring-blue-700 focus:ring-offset-2" required>
                    </div>
                </div>

                <div>
                    <label for="Repeat your password" class="mb-2 block text-sm font-medium text-gray-700">@lang('main.password_re')</label>
                    <div class="mb-4">
                        <input type="password" name="password_confirmation" placeholder="password123" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:shadow-xl focus:outline-none focus:ring-2 focus:ring-blue-700 focus:ring-offset-2" required>
                    </div>
                </div>

                <div class="flex justify-center">
                    <button type="submit" class="mb-3 bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded-md shadow-lg hover:shadow-xl focus:shadow-xl focus:outline-none focus:ring-2 focus:ring-blue-700 focus:ring-offset-2 transition duration-150 ease-in-out">@lang('main.register')</button>
                </div>
            </form>
            <a href="/login" class="flex justify-center hover:underline">@lang('main.user_have_account')</a>
        </div>
    </div>
    
</body>

</html>

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/resources/views/step3-partner-registration.blade.php
Contents:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Step 3: Partner Registration</title>
    @vite(['resources/css/app.css', 'resources/js/app.js'])
</head>
<body class="bg-gray-50">
    <header class="flex justify-between items-center p-6 bg-green-500 text-white">
        <h1 class="text-3xl font-sans">ZeroWasteWagon</h1>
        <div class="space-x-4 flex items-center">
            <a href="/about-us" class="hover:underline">About Us</a>
            <a href="{{ route('locale', 'lt') }}" class="hover:underline">Lietuvių</a>
            <a href="{{ route('locale', 'en') }}" class="hover:underline">English</a>
    </header>
    <div class="flex items-center justify-center min-h-screen">
        <div class="bg-white p-8 rounded-lg shadow-md w-full max-w-md">
            <h2 class="text-2xl font-bold mb-6 text-center">@lang('main.contact_information')</h2>
            @if ($errors->any())
                <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative" role="alert">
                    <strong class="font-bold">Whoops!</strong>
                    <span class="block sm:inline">{{ $errors->first() }}</span>
                </div>
            @endif

            <form action="{{ route('partner.registration.step3.post') }}" method="POST">
                @csrf
                <div class="mb-4">
                    <input type="url" name="website" placeholder="@lang('main.website')" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" maxlength="255">
                </div>
                <div class="mb-4">
                    <input type="text" name="address" placeholder="@lang('main.address')" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" required maxlength="255">
                </div>
                <div class="mb-4">
                    <input type="text" name="venue_phone_number" placeholder="@lang('main.venue_phone_number')" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" required maxlength="255">
                </div>
                <div class="mb-4">
                    <input type="email" name="email" placeholder="Email" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" required maxlength="255">
                </div>
                <div class="mb-4">
                    <input type="password" name="password" placeholder="@lang('main.password')" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" required>
                </div>
                <div class="mb-4">
                    <input type="password" name="password_confirmation" placeholder="@lang('main.password_re')" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" required>
                </div>
                <div class="flex justify-center">
                    <button type="submit" class="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline">@lang('main.register')</button>
                </div>
            </form>
        </div>
    </div>
</body>
</html>

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/resources/views/step1-partner-registration.blade.php
Contents:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Step 1: Partner Registration</title>
    @vite(['resources/css/app.css', 'resources/js/app.js'])
</head>
<body class="bg-gray-50">
    <header class="flex justify-between items-center p-6 bg-green-500 text-white">
        <h1 class="text-3xl font-sans">ZeroWasteWagon</h1>
        <div class="space-x-4 flex items-center">
            <a href="/about-us" class="hover:underline">About Us</a>
            <a href="{{ route('locale', 'lt') }}" class="hover:underline">Lietuvių</a>
            <a href="{{ route('locale', 'en') }}" class="hover:underline">English</a>
    </header>
    <div class="flex items-center justify-center min-h-screen">
        <div class="bg-white p-8 rounded-lg shadow-md w-full max-w-md">
            <h2 class="text-2xl font-bold mb-6 text-center">@lang('main.inv_code')</h2>
            @if ($errors->any())
            <div id="invitation_code_error" style="color: red; display: none;"></div>
                <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative" role="alert">
                    <strong class="font-bold">Whoops!</strong>
                    <span class="block sm:inline">{{ $errors->first() }}</span>
                </div>
            @endif
            <form action="{{ route('partner.registration.step1.post') }}" method="POST">
                @csrf
                <div class="mb-4">
                    <input type="text" name="invitation_code" placeholder="Invitation Code" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" required>
                </div>
                
                <div class="flex justify-center">
                    <button type="submit" class="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline">@lang('main.next')</button>
                </div>
            </form>
        </div>
    </div>
</body>
    <script>
    document.getElementById('invitation_code').addEventListener('input', function(e) {
        const input = e.target;
        const errorDiv = document.getElementById('invitation_code_error');
        if (input.value.length !== 6) {
            errorDiv.textContent = "The invitation code must be exactly 6 characters.";
            errorDiv.style.display = 'block';
        } else {
            errorDiv.textContent = "";
            errorDiv.style.display = 'none';
        }
    });
    </script>
</html>

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/resources/views/welcome.blade.php
Contents:
<!DOCTYPE html>
<html lang="{{ str_replace('_', '-', app()->getLocale()) }}">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">

        <title>Laravel</title>

        <!-- Fonts -->
        <link rel="preconnect" href="https://fonts.bunny.net">
        <link href="https://fonts.bunny.net/css?family=figtree:400,600&display=swap" rel="stylesheet" />

        <!-- Styles -->
        <style>
            /* ! tailwindcss v3.4.1 | MIT License | https://tailwindcss.com */*,::after,::before{box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}::after,::before{--tw-content:''}:host,html{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;tab-size:4;font-family:Figtree, ui-sans-serif, system-ui, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji;font-feature-settings:normal;font-variation-settings:normal;-webkit-tap-highlight-color:transparent}body{margin:0;line-height:inherit}hr{height:0;color:inherit;border-top-width:1px}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;font-feature-settings:normal;font-variation-settings:normal;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit;border-collapse:collapse}button,input,optgroup,select,textarea{font-family:inherit;font-feature-settings:inherit;font-variation-settings:inherit;font-size:100%;font-weight:inherit;line-height:inherit;color:inherit;margin:0;padding:0}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dd,dl,figure,h1,h2,h3,h4,h5,h6,hr,p,pre{margin:0}fieldset{margin:0;padding:0}legend{padding:0}menu,ol,ul{list-style:none;margin:0;padding:0}dialog{padding:0}textarea{resize:vertical}input::placeholder,textarea::placeholder{opacity:1;color:#9ca3af}[role=button],button{cursor:pointer}:disabled{cursor:default}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{max-width:100%;height:auto}[hidden]{display:none}*, ::before, ::after{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }.absolute{position:absolute}.relative{position:relative}.-left-20{left:-5rem}.top-0{top:0px}.-bottom-16{bottom:-4rem}.-left-16{left:-4rem}.-mx-3{margin-left:-0.75rem;margin-right:-0.75rem}.mt-4{margin-top:1rem}.mt-6{margin-top:1.5rem}.flex{display:flex}.grid{display:grid}.hidden{display:none}.aspect-video{aspect-ratio:16 / 9}.size-12{width:3rem;height:3rem}.size-5{width:1.25rem;height:1.25rem}.size-6{width:1.5rem;height:1.5rem}.h-12{height:3rem}.h-40{height:10rem}.h-full{height:100%}.min-h-screen{min-height:100vh}.w-full{width:100%}.w-\[calc\(100\%\+8rem\)\]{width:calc(100% + 8rem)}.w-auto{width:auto}.max-w-\[877px\]{max-width:877px}.max-w-2xl{max-width:42rem}.flex-1{flex:1 1 0%}.shrink-0{flex-shrink:0}.grid-cols-2{grid-template-columns:repeat(2, minmax(0, 1fr))}.flex-col{flex-direction:column}.items-start{align-items:flex-start}.items-center{align-items:center}.items-stretch{align-items:stretch}.justify-end{justify-content:flex-end}.justify-center{justify-content:center}.gap-2{gap:0.5rem}.gap-4{gap:1rem}.gap-6{gap:1.5rem}.self-center{align-self:center}.overflow-hidden{overflow:hidden}.rounded-\[10px\]{border-radius:10px}.rounded-full{border-radius:9999px}.rounded-lg{border-radius:0.5rem}.rounded-md{border-radius:0.375rem}.rounded-sm{border-radius:0.125rem}.bg-\[\#FF2D20\]\/10{background-color:rgb(255 45 32 / 0.1)}.bg-white{--tw-bg-opacity:1;background-color:rgb(255 255 255 / var(--tw-bg-opacity))}.bg-gradient-to-b{background-image:linear-gradient(to bottom, var(--tw-gradient-stops))}.from-transparent{--tw-gradient-from:transparent var(--tw-gradient-from-position);--tw-gradient-to:rgb(0 0 0 / 0) var(--tw-gradient-to-position);--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to)}.via-white{--tw-gradient-to:rgb(255 255 255 / 0)  var(--tw-gradient-to-position);--tw-gradient-stops:var(--tw-gradient-from), #fff var(--tw-gradient-via-position), var(--tw-gradient-to)}.to-white{--tw-gradient-to:#fff var(--tw-gradient-to-position)}.stroke-\[\#FF2D20\]{stroke:#FF2D20}.object-cover{object-fit:cover}.object-top{object-position:top}.p-6{padding:1.5rem}.px-6{padding-left:1.5rem;padding-right:1.5rem}.py-10{padding-top:2.5rem;padding-bottom:2.5rem}.px-3{padding-left:0.75rem;padding-right:0.75rem}.py-16{padding-top:4rem;padding-bottom:4rem}.py-2{padding-top:0.5rem;padding-bottom:0.5rem}.pt-3{padding-top:0.75rem}.text-center{text-align:center}.font-sans{font-family:Figtree, ui-sans-serif, system-ui, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji}.text-sm{font-size:0.875rem;line-height:1.25rem}.text-sm\/relaxed{font-size:0.875rem;line-height:1.625}.text-xl{font-size:1.25rem;line-height:1.75rem}.font-semibold{font-weight:600}.text-black{--tw-text-opacity:1;color:rgb(0 0 0 / var(--tw-text-opacity))}.text-white{--tw-text-opacity:1;color:rgb(255 255 255 / var(--tw-text-opacity))}.underline{-webkit-text-decoration-line:underline;text-decoration-line:underline}.antialiased{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.shadow-\[0px_14px_34px_0px_rgba\(0\2c 0\2c 0\2c 0\.08\)\]{--tw-shadow:0px 14px 34px 0px rgba(0,0,0,0.08);--tw-shadow-colored:0px 14px 34px 0px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}.ring-1{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000)}.ring-transparent{--tw-ring-color:transparent}.ring-white\/\[0\.05\]{--tw-ring-color:rgb(255 255 255 / 0.05)}.drop-shadow-\[0px_4px_34px_rgba\(0\2c 0\2c 0\2c 0\.06\)\]{--tw-drop-shadow:drop-shadow(0px 4px 34px rgba(0,0,0,0.06));filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.drop-shadow-\[0px_4px_34px_rgba\(0\2c 0\2c 0\2c 0\.25\)\]{--tw-drop-shadow:drop-shadow(0px 4px 34px rgba(0,0,0,0.25));filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.transition{transition-property:color, background-color, border-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter;transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color, -webkit-backdrop-filter;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms}.duration-300{transition-duration:300ms}.selection\:bg-\[\#FF2D20\] *::selection{--tw-bg-opacity:1;background-color:rgb(255 45 32 / var(--tw-bg-opacity))}.selection\:text-white *::selection{--tw-text-opacity:1;color:rgb(255 255 255 / var(--tw-text-opacity))}.selection\:bg-\[\#FF2D20\]::selection{--tw-bg-opacity:1;background-color:rgb(255 45 32 / var(--tw-bg-opacity))}.selection\:text-white::selection{--tw-text-opacity:1;color:rgb(255 255 255 / var(--tw-text-opacity))}.hover\:text-black:hover{--tw-text-opacity:1;color:rgb(0 0 0 / var(--tw-text-opacity))}.hover\:text-black\/70:hover{color:rgb(0 0 0 / 0.7)}.hover\:ring-black\/20:hover{--tw-ring-color:rgb(0 0 0 / 0.2)}.focus\:outline-none:focus{outline:2px solid transparent;outline-offset:2px}.focus-visible\:ring-1:focus-visible{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000)}.focus-visible\:ring-\[\#FF2D20\]:focus-visible{--tw-ring-opacity:1;--tw-ring-color:rgb(255 45 32 / var(--tw-ring-opacity))}@media (min-width: 640px){.sm\:size-16{width:4rem;height:4rem}.sm\:size-6{width:1.5rem;height:1.5rem}.sm\:pt-5{padding-top:1.25rem}}@media (min-width: 768px){.md\:row-span-3{grid-row:span 3 / span 3}}@media (min-width: 1024px){.lg\:col-start-2{grid-column-start:2}.lg\:h-16{height:4rem}.lg\:max-w-7xl{max-width:80rem}.lg\:grid-cols-3{grid-template-columns:repeat(3, minmax(0, 1fr))}.lg\:grid-cols-2{grid-template-columns:repeat(2, minmax(0, 1fr))}.lg\:flex-col{flex-direction:column}.lg\:items-end{align-items:flex-end}.lg\:justify-center{justify-content:center}.lg\:gap-8{gap:2rem}.lg\:p-10{padding:2.5rem}.lg\:pb-10{padding-bottom:2.5rem}.lg\:pt-0{padding-top:0px}.lg\:text-\[\#FF2D20\]{--tw-text-opacity:1;color:rgb(255 45 32 / var(--tw-text-opacity))}}@media (prefers-color-scheme: dark){.dark\:block{display:block}.dark\:hidden{display:none}.dark\:bg-black{--tw-bg-opacity:1;background-color:rgb(0 0 0 / var(--tw-bg-opacity))}.dark\:bg-zinc-900{--tw-bg-opacity:1;background-color:rgb(24 24 27 / var(--tw-bg-opacity))}.dark\:via-zinc-900{--tw-gradient-to:rgb(24 24 27 / 0)  var(--tw-gradient-to-position);--tw-gradient-stops:var(--tw-gradient-from), #18181b var(--tw-gradient-via-position), var(--tw-gradient-to)}.dark\:to-zinc-900{--tw-gradient-to:#18181b var(--tw-gradient-to-position)}.dark\:text-white\/50{color:rgb(255 255 255 / 0.5)}.dark\:text-white{--tw-text-opacity:1;color:rgb(255 255 255 / var(--tw-text-opacity))}.dark\:text-white\/70{color:rgb(255 255 255 / 0.7)}.dark\:ring-zinc-800{--tw-ring-opacity:1;--tw-ring-color:rgb(39 39 42 / var(--tw-ring-opacity))}.dark\:hover\:text-white:hover{--tw-text-opacity:1;color:rgb(255 255 255 / var(--tw-text-opacity))}.dark\:hover\:text-white\/70:hover{color:rgb(255 255 255 / 0.7)}.dark\:hover\:text-white\/80:hover{color:rgb(255 255 255 / 0.8)}.dark\:hover\:ring-zinc-700:hover{--tw-ring-opacity:1;--tw-ring-color:rgb(63 63 70 / var(--tw-ring-opacity))}.dark\:focus-visible\:ring-\[\#FF2D20\]:focus-visible{--tw-ring-opacity:1;--tw-ring-color:rgb(255 45 32 / var(--tw-ring-opacity))}.dark\:focus-visible\:ring-white:focus-visible{--tw-ring-opacity:1;--tw-ring-color:rgb(255 255 255 / var(--tw-ring-opacity))}}
        </style>
    </head>
    <body class="font-sans antialiased dark:bg-black dark:text-white/50">
        <div class="bg-gray-50 text-black/50 dark:bg-black dark:text-white/50">
            <img id="background" class="absolute -left-20 top-0 max-w-[877px]" src="https://laravel.com/assets/img/welcome/background.svg" />
            <div class="relative min-h-screen flex flex-col items-center justify-center selection:bg-[#FF2D20] selection:text-white">
                <div class="relative w-full max-w-2xl px-6 lg:max-w-7xl">
                    <header class="grid grid-cols-2 items-center gap-2 py-10 lg:grid-cols-3">
                        <div class="flex lg:justify-center lg:col-start-2">
                            <svg class="h-12 w-auto text-white lg:h-16 lg:text-[#FF2D20]" viewBox="0 0 62 65" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M61.8548 14.6253C61.8778 14.7102 61.8895 14.7978 61.8897 14.8858V28.5615C61.8898 28.737 61.8434 28.9095 61.7554 29.0614C61.6675 29.2132 61.5409 29.3392 61.3887 29.4265L49.9104 36.0351V49.1337C49.9104 49.4902 49.7209 49.8192 49.4118 49.9987L25.4519 63.7916C25.3971 63.8227 25.3372 63.8427 25.2774 63.8639C25.255 63.8714 25.2338 63.8851 25.2101 63.8913C25.0426 63.9354 24.8666 63.9354 24.6991 63.8913C24.6716 63.8838 24.6467 63.8689 24.6205 63.8589C24.5657 63.8389 24.5084 63.8215 24.456 63.7916L0.501061 49.9987C0.348882 49.9113 0.222437 49.7853 0.134469 49.6334C0.0465019 49.4816 0.000120578 49.3092 0 49.1337L0 8.10652C0 8.01678 0.0124642 7.92953 0.0348998 7.84477C0.0423783 7.8161 0.0598282 7.78993 0.0697995 7.76126C0.0884958 7.70891 0.105946 7.65531 0.133367 7.6067C0.152063 7.5743 0.179485 7.54812 0.20192 7.51821C0.230588 7.47832 0.256763 7.43719 0.290416 7.40229C0.319084 7.37362 0.356476 7.35243 0.388883 7.32751C0.425029 7.29759 0.457436 7.26518 0.498568 7.2415L12.4779 0.345059C12.6296 0.257786 12.8015 0.211853 12.9765 0.211853C13.1515 0.211853 13.3234 0.257786 13.475 0.345059L25.4531 7.2415H25.4556C25.4955 7.26643 25.5292 7.29759 25.5653 7.32626C25.5977 7.35119 25.6339 7.37362 25.6625 7.40104C25.6974 7.43719 25.7224 7.47832 25.7523 7.51821C25.7735 7.54812 25.8021 7.5743 25.8196 7.6067C25.8483 7.65656 25.8645 7.70891 25.8844 7.76126C25.8944 7.78993 25.9118 7.8161 25.9193 7.84602C25.9423 7.93096 25.954 8.01853 25.9542 8.10652V33.7317L35.9355 27.9844V14.8846C35.9355 14.7973 35.948 14.7088 35.9704 14.6253C35.9792 14.5954 35.9954 14.5692 36.0053 14.5405C36.0253 14.4882 36.0427 14.4346 36.0702 14.386C36.0888 14.3536 36.1163 14.3274 36.1375 14.2975C36.1674 14.2576 36.1923 14.2165 36.2272 14.1816C36.2559 14.1529 36.292 14.1317 36.3244 14.1068C36.3618 14.0769 36.3942 14.0445 36.4341 14.0208L48.4147 7.12434C48.5663 7.03694 48.7383 6.99094 48.9133 6.99094C49.0883 6.99094 49.2602 7.03694 49.4118 7.12434L61.3899 14.0208C61.4323 14.0457 61.4647 14.0769 61.5021 14.1055C61.5333 14.1305 61.5694 14.1529 61.5981 14.1803C61.633 14.2165 61.6579 14.2576 61.6878 14.2975C61.7103 14.3274 61.7377 14.3536 61.7551 14.386C61.7838 14.4346 61.8 14.4882 61.8199 14.5405C61.8312 14.5692 61.8474 14.5954 61.8548 14.6253ZM59.893 27.9844V16.6121L55.7013 19.0252L49.9104 22.3593V33.7317L59.8942 27.9844H59.893ZM47.9149 48.5566V37.1768L42.2187 40.4299L25.953 49.7133V61.2003L47.9149 48.5566ZM1.99677 9.83281V48.5566L23.9562 61.199V49.7145L12.4841 43.2219L12.4804 43.2194L12.4754 43.2169C12.4368 43.1945 12.4044 43.1621 12.3682 43.1347C12.3371 43.1097 12.3009 43.0898 12.2735 43.0624L12.271 43.0586C12.2386 43.0275 12.2162 42.9888 12.1887 42.9539C12.1638 42.9203 12.1339 42.8916 12.114 42.8567L12.1127 42.853C12.0903 42.8156 12.0766 42.7707 12.0604 42.7283C12.0442 42.6909 12.023 42.656 12.013 42.6161C12.0005 42.5688 11.998 42.5177 11.9931 42.4691C11.9881 42.4317 11.9781 42.3943 11.9781 42.3569V15.5801L6.18848 12.2446L1.99677 9.83281ZM12.9777 2.36177L2.99764 8.10652L12.9752 13.8513L22.9541 8.10527L12.9752 2.36177H12.9777ZM18.1678 38.2138L23.9574 34.8809V9.83281L19.7657 12.2459L13.9749 15.5801V40.6281L18.1678 38.2138ZM48.9133 9.14105L38.9344 14.8858L48.9133 20.6305L58.8909 14.8846L48.9133 9.14105ZM47.9149 22.3593L42.124 19.0252L37.9323 16.6121V27.9844L43.7219 31.3174L47.9149 33.7317V22.3593ZM24.9533 47.987L39.59 39.631L46.9065 35.4555L36.9352 29.7145L25.4544 36.3242L14.9907 42.3482L24.9533 47.987Z" fill="currentColor"/></svg>
                        </div>
                        @if (Route::has('login'))
                            <nav class="-mx-3 flex flex-1 justify-end">
                                @auth
                                    <a
                                        href="{{ url('/dashboard') }}"
                                        class="rounded-md px-3 py-2 text-black ring-1 ring-transparent transition hover:text-black/70 focus:outline-none focus-visible:ring-[#FF2D20] dark:text-white dark:hover:text-white/80 dark:focus-visible:ring-white"
                                    >
                                        Dashboard
                                    </a>
                                @else
                                    <a
                                        href="{{ route('login') }}"
                                        class="rounded-md px-3 py-2 text-black ring-1 ring-transparent transition hover:text-black/70 focus:outline-none focus-visible:ring-[#FF2D20] dark:text-white dark:hover:text-white/80 dark:focus-visible:ring-white"
                                    >
                                        Log in
                                    </a>

                                    @if (Route::has('register'))
                                        <a
                                            href="{{ route('register') }}"
                                            class="rounded-md px-3 py-2 text-black ring-1 ring-transparent transition hover:text-black/70 focus:outline-none focus-visible:ring-[#FF2D20] dark:text-white dark:hover:text-white/80 dark:focus-visible:ring-white"
                                        >
                                            Register
                                        </a>
                                    @endif
                                @endauth
                            </nav>
                        @endif
                    </header>

                    <main class="mt-6">
                        <div class="grid gap-6 lg:grid-cols-2 lg:gap-8">
                            <a
                                href="https://laravel.com/docs"
                                id="docs-card"
                                class="flex flex-col items-start gap-6 overflow-hidden rounded-lg bg-white p-6 shadow-[0px_14px_34px_0px_rgba(0,0,0,0.08)] ring-1 ring-white/[0.05] transition duration-300 hover:text-black/70 hover:ring-black/20 focus:outline-none focus-visible:ring-[#FF2D20] md:row-span-3 lg:p-10 lg:pb-10 dark:bg-zinc-900 dark:ring-zinc-800 dark:hover:text-white/70 dark:hover:ring-zinc-700 dark:focus-visible:ring-[#FF2D20]"
                            >
                                <div id="screenshot-container" class="relative flex w-full flex-1 items-stretch">
                                    <img
                                        src="https://laravel.com/assets/img/welcome/docs-light.svg"
                                        alt="Laravel documentation screenshot"
                                        class="aspect-video h-full w-full flex-1 rounded-[10px] object-top object-cover drop-shadow-[0px_4px_34px_rgba(0,0,0,0.06)] dark:hidden"
                                        onerror="
                                            document.getElementById('screenshot-container').classList.add('!hidden');
                                            document.getElementById('docs-card').classList.add('!row-span-1');
                                            document.getElementById('docs-card-content').classList.add('!flex-row');
                                            document.getElementById('background').classList.add('!hidden');
                                        "
                                    />
                                    <img
                                        src="https://laravel.com/assets/img/welcome/docs-dark.svg"
                                        alt="Laravel documentation screenshot"
                                        class="hidden aspect-video h-full w-full flex-1 rounded-[10px] object-top object-cover drop-shadow-[0px_4px_34px_rgba(0,0,0,0.25)] dark:block"
                                    />
                                    <div
                                        class="absolute -bottom-16 -left-16 h-40 w-[calc(100%+8rem)] bg-gradient-to-b from-transparent via-white to-white dark:via-zinc-900 dark:to-zinc-900"
                                    ></div>
                                </div>

                                <div class="relative flex items-center gap-6 lg:items-end">
                                    <div id="docs-card-content" class="flex items-start gap-6 lg:flex-col">
                                        <div class="flex size-12 shrink-0 items-center justify-center rounded-full bg-[#FF2D20]/10 sm:size-16">
                                            <svg class="size-5 sm:size-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><path fill="#FF2D20" d="M23 4a1 1 0 0 0-1.447-.894L12.224 7.77a.5.5 0 0 1-.448 0L2.447 3.106A1 1 0 0 0 1 4v13.382a1.99 1.99 0 0 0 1.105 1.79l9.448 4.728c.14.065.293.1.447.1.154-.005.306-.04.447-.105l9.453-4.724a1.99 1.99 0 0 0 1.1-1.789V4ZM3 6.023a.25.25 0 0 1 .362-.223l7.5 3.75a.251.251 0 0 1 .138.223v11.2a.25.25 0 0 1-.362.224l-7.5-3.75a.25.25 0 0 1-.138-.22V6.023Zm18 11.2a.25.25 0 0 1-.138.224l-7.5 3.75a.249.249 0 0 1-.329-.099.249.249 0 0 1-.033-.12V9.772a.251.251 0 0 1 .138-.224l7.5-3.75a.25.25 0 0 1 .362.224v11.2Z"/><path fill="#FF2D20" d="m3.55 1.893 8 4.048a1.008 1.008 0 0 0 .9 0l8-4.048a1 1 0 0 0-.9-1.785l-7.322 3.706a.506.506 0 0 1-.452 0L4.454.108a1 1 0 0 0-.9 1.785H3.55Z"/></svg>
                                        </div>

                                        <div class="pt-3 sm:pt-5 lg:pt-0">
                                            <h2 class="text-xl font-semibold text-black dark:text-white">Documentation</h2>

                                            <p class="mt-4 text-sm/relaxed">
                                                Laravel has wonderful documentation covering every aspect of the framework. Whether you are a newcomer or have prior experience with Laravel, we recommend reading our documentation from beginning to end.
                                            </p>
                                        </div>
                                    </div>

                                    <svg class="size-6 shrink-0 stroke-[#FF2D20]" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"><path stroke-linecap="round" stroke-linejoin="round" d="M4.5 12h15m0 0l-6.75-6.75M19.5 12l-6.75 6.75"/></svg>
                                </div>
                            </a>

                            <a
                                href="https://laracasts.com"
                                class="flex items-start gap-4 rounded-lg bg-white p-6 shadow-[0px_14px_34px_0px_rgba(0,0,0,0.08)] ring-1 ring-white/[0.05] transition duration-300 hover:text-black/70 hover:ring-black/20 focus:outline-none focus-visible:ring-[#FF2D20] lg:pb-10 dark:bg-zinc-900 dark:ring-zinc-800 dark:hover:text-white/70 dark:hover:ring-zinc-700 dark:focus-visible:ring-[#FF2D20]"
                            >
                                <div class="flex size-12 shrink-0 items-center justify-center rounded-full bg-[#FF2D20]/10 sm:size-16">
                                    <svg class="size-5 sm:size-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><g fill="#FF2D20"><path d="M24 8.25a.5.5 0 0 0-.5-.5H.5a.5.5 0 0 0-.5.5v12a2.5 2.5 0 0 0 2.5 2.5h19a2.5 2.5 0 0 0 2.5-2.5v-12Zm-7.765 5.868a1.221 1.221 0 0 1 0 2.264l-6.626 2.776A1.153 1.153 0 0 1 8 18.123v-5.746a1.151 1.151 0 0 1 1.609-1.035l6.626 2.776ZM19.564 1.677a.25.25 0 0 0-.177-.427H15.6a.106.106 0 0 0-.072.03l-4.54 4.543a.25.25 0 0 0 .177.427h3.783c.027 0 .054-.01.073-.03l4.543-4.543ZM22.071 1.318a.047.047 0 0 0-.045.013l-4.492 4.492a.249.249 0 0 0 .038.385.25.25 0 0 0 .14.042h5.784a.5.5 0 0 0 .5-.5v-2a2.5 2.5 0 0 0-1.925-2.432ZM13.014 1.677a.25.25 0 0 0-.178-.427H9.101a.106.106 0 0 0-.073.03l-4.54 4.543a.25.25 0 0 0 .177.427H8.4a.106.106 0 0 0 .073-.03l4.54-4.543ZM6.513 1.677a.25.25 0 0 0-.177-.427H2.5A2.5 2.5 0 0 0 0 3.75v2a.5.5 0 0 0 .5.5h1.4a.106.106 0 0 0 .073-.03l4.54-4.543Z"/></g></svg>
                                </div>

                                <div class="pt-3 sm:pt-5">
                                    <h2 class="text-xl font-semibold text-black dark:text-white">Laracasts</h2>

                                    <p class="mt-4 text-sm/relaxed">
                                        Laracasts offers thousands of video tutorials on Laravel, PHP, and JavaScript development. Check them out, see for yourself, and massively level up your development skills in the process.
                                    </p>
                                </div>

                                <svg class="size-6 shrink-0 self-center stroke-[#FF2D20]" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"><path stroke-linecap="round" stroke-linejoin="round" d="M4.5 12h15m0 0l-6.75-6.75M19.5 12l-6.75 6.75"/></svg>
                            </a>

                            <a
                                href="https://laravel-news.com"
                                class="flex items-start gap-4 rounded-lg bg-white p-6 shadow-[0px_14px_34px_0px_rgba(0,0,0,0.08)] ring-1 ring-white/[0.05] transition duration-300 hover:text-black/70 hover:ring-black/20 focus:outline-none focus-visible:ring-[#FF2D20] lg:pb-10 dark:bg-zinc-900 dark:ring-zinc-800 dark:hover:text-white/70 dark:hover:ring-zinc-700 dark:focus-visible:ring-[#FF2D20]"
                            >
                                <div class="flex size-12 shrink-0 items-center justify-center rounded-full bg-[#FF2D20]/10 sm:size-16">
                                    <svg class="size-5 sm:size-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><g fill="#FF2D20"><path d="M8.75 4.5H5.5c-.69 0-1.25.56-1.25 1.25v4.75c0 .69.56 1.25 1.25 1.25h3.25c.69 0 1.25-.56 1.25-1.25V5.75c0-.69-.56-1.25-1.25-1.25Z"/><path d="M24 10a3 3 0 0 0-3-3h-2V2.5a2 2 0 0 0-2-2H2a2 2 0 0 0-2 2V20a3.5 3.5 0 0 0 3.5 3.5h17A3.5 3.5 0 0 0 24 20V10ZM3.5 21.5A1.5 1.5 0 0 1 2 20V3a.5.5 0 0 1 .5-.5h14a.5.5 0 0 1 .5.5v17c0 .295.037.588.11.874a.5.5 0 0 1-.484.625L3.5 21.5ZM22 20a1.5 1.5 0 1 1-3 0V9.5a.5.5 0 0 1 .5-.5H21a1 1 0 0 1 1 1v10Z"/><path d="M12.751 6.047h2a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-.75.75h-2A.75.75 0 0 1 12 7.3v-.5a.75.75 0 0 1 .751-.753ZM12.751 10.047h2a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-.75.75h-2A.75.75 0 0 1 12 11.3v-.5a.75.75 0 0 1 .751-.753ZM4.751 14.047h10a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-.75.75h-10A.75.75 0 0 1 4 15.3v-.5a.75.75 0 0 1 .751-.753ZM4.75 18.047h7.5a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-.75.75h-7.5A.75.75 0 0 1 4 19.3v-.5a.75.75 0 0 1 .75-.753Z"/></g></svg>
                                </div>

                                <div class="pt-3 sm:pt-5">
                                    <h2 class="text-xl font-semibold text-black dark:text-white">Laravel News</h2>

                                    <p class="mt-4 text-sm/relaxed">
                                        Laravel News is a community driven portal and newsletter aggregating all of the latest and most important news in the Laravel ecosystem, including new package releases and tutorials.
                                    </p>
                                </div>

                                <svg class="size-6 shrink-0 self-center stroke-[#FF2D20]" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"><path stroke-linecap="round" stroke-linejoin="round" d="M4.5 12h15m0 0l-6.75-6.75M19.5 12l-6.75 6.75"/></svg>
                            </a>

                            <div class="flex items-start gap-4 rounded-lg bg-white p-6 shadow-[0px_14px_34px_0px_rgba(0,0,0,0.08)] ring-1 ring-white/[0.05] transition duration-300 hover:text-black/70 hover:ring-black/20 focus:outline-none focus-visible:ring-[#FF2D20] lg:pb-10 dark:bg-zinc-900 dark:ring-zinc-800 dark:hover:text-white/70 dark:hover:ring-zinc-700 dark:focus-visible:ring-[#FF2D20]">
                                <div class="flex size-12 shrink-0 items-center justify-center rounded-full bg-[#FF2D20]/10 sm:size-16">
                                    <svg class="size-5 sm:size-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                                        <g fill="#FF2D20">
                                            <path
                                                d="M16.597 12.635a.247.247 0 0 0-.08-.237 2.234 2.234 0 0 1-.769-1.68c.001-.195.03-.39.084-.578a.25.25 0 0 0-.09-.267 8.8 8.8 0 0 0-4.826-1.66.25.25 0 0 0-.268.181 2.5 2.5 0 0 1-2.4 1.824.045.045 0 0 0-.045.037 12.255 12.255 0 0 0-.093 3.86.251.251 0 0 0 .208.214c2.22.366 4.367 1.08 6.362 2.118a.252.252 0 0 0 .32-.079 10.09 10.09 0 0 0 1.597-3.733ZM13.616 17.968a.25.25 0 0 0-.063-.407A19.697 19.697 0 0 0 8.91 15.98a.25.25 0 0 0-.287.325c.151.455.334.898.548 1.328.437.827.981 1.594 1.619 2.28a.249.249 0 0 0 .32.044 29.13 29.13 0 0 0 2.506-1.99ZM6.303 14.105a.25.25 0 0 0 .265-.274 13.048 13.048 0 0 1 .205-4.045.062.062 0 0 0-.022-.07 2.5 2.5 0 0 1-.777-.982.25.25 0 0 0-.271-.149 11 11 0 0 0-5.6 2.815.255.255 0 0 0-.075.163c-.008.135-.02.27-.02.406.002.8.084 1.598.246 2.381a.25.25 0 0 0 .303.193 19.924 19.924 0 0 1 5.746-.438ZM9.228 20.914a.25.25 0 0 0 .1-.393 11.53 11.53 0 0 1-1.5-2.22 12.238 12.238 0 0 1-.91-2.465.248.248 0 0 0-.22-.187 18.876 18.876 0 0 0-5.69.33.249.249 0 0 0-.179.336c.838 2.142 2.272 4 4.132 5.353a.254.254 0 0 0 .15.048c1.41-.01 2.807-.282 4.117-.802ZM18.93 12.957l-.005-.008a.25.25 0 0 0-.268-.082 2.21 2.21 0 0 1-.41.081.25.25 0 0 0-.217.2c-.582 2.66-2.127 5.35-5.75 7.843a.248.248 0 0 0-.09.299.25.25 0 0 0 .065.091 28.703 28.703 0 0 0 2.662 2.12.246.246 0 0 0 .209.037c2.579-.701 4.85-2.242 6.456-4.378a.25.25 0 0 0 .048-.189 13.51 13.51 0 0 0-2.7-6.014ZM5.702 7.058a.254.254 0 0 0 .2-.165A2.488 2.488 0 0 1 7.98 5.245a.093.093 0 0 0 .078-.062 19.734 19.734 0 0 1 3.055-4.74.25.25 0 0 0-.21-.41 12.009 12.009 0 0 0-10.4 8.558.25.25 0 0 0 .373.281 12.912 12.912 0 0 1 4.826-1.814ZM10.773 22.052a.25.25 0 0 0-.28-.046c-.758.356-1.55.635-2.365.833a.25.25 0 0 0-.022.48c1.252.43 2.568.65 3.893.65.1 0 .2 0 .3-.008a.25.25 0 0 0 .147-.444c-.526-.424-1.1-.917-1.673-1.465ZM18.744 8.436a.249.249 0 0 0 .15.228 2.246 2.246 0 0 1 1.352 2.054c0 .337-.08.67-.23.972a.25.25 0 0 0 .042.28l.007.009a15.016 15.016 0 0 1 2.52 4.6.25.25 0 0 0 .37.132.25.25 0 0 0 .096-.114c.623-1.464.944-3.039.945-4.63a12.005 12.005 0 0 0-5.78-10.258.25.25 0 0 0-.373.274c.547 2.109.85 4.274.901 6.453ZM9.61 5.38a.25.25 0 0 0 .08.31c.34.24.616.561.8.935a.25.25 0 0 0 .3.127.631.631 0 0 1 .206-.034c2.054.078 4.036.772 5.69 1.991a.251.251 0 0 0 .267.024c.046-.024.093-.047.141-.067a.25.25 0 0 0 .151-.23A29.98 29.98 0 0 0 15.957.764a.25.25 0 0 0-.16-.164 11.924 11.924 0 0 0-2.21-.518.252.252 0 0 0-.215.076A22.456 22.456 0 0 0 9.61 5.38Z"
                                            />
                                        </g>
                                    </svg>
                                </div>

                                <div class="pt-3 sm:pt-5">
                                    <h2 class="text-xl font-semibold text-black dark:text-white">Vibrant Ecosystem</h2>

                                    <p class="mt-4 text-sm/relaxed">
                                        Laravel's robust library of first-party tools and libraries, such as <a href="https://forge.laravel.com" class="rounded-sm underline hover:text-black focus:outline-none focus-visible:ring-1 focus-visible:ring-[#FF2D20] dark:hover:text-white dark:focus-visible:ring-[#FF2D20]">Forge</a>, <a href="https://vapor.laravel.com" class="rounded-sm underline hover:text-black focus:outline-none focus-visible:ring-1 focus-visible:ring-[#FF2D20] dark:hover:text-white">Vapor</a>, <a href="https://nova.laravel.com" class="rounded-sm underline hover:text-black focus:outline-none focus-visible:ring-1 focus-visible:ring-[#FF2D20] dark:hover:text-white">Nova</a>, <a href="https://envoyer.io" class="rounded-sm underline hover:text-black focus:outline-none focus-visible:ring-1 focus-visible:ring-[#FF2D20] dark:hover:text-white">Envoyer</a>, and <a href="https://herd.laravel.com" class="rounded-sm underline hover:text-black focus:outline-none focus-visible:ring-1 focus-visible:ring-[#FF2D20] dark:hover:text-white">Herd</a> help you take your projects to the next level. Pair them with powerful open source libraries like <a href="https://laravel.com/docs/billing" class="rounded-sm underline hover:text-black focus:outline-none focus-visible:ring-1 focus-visible:ring-[#FF2D20] dark:hover:text-white">Cashier</a>, <a href="https://laravel.com/docs/dusk" class="rounded-sm underline hover:text-black focus:outline-none focus-visible:ring-1 focus-visible:ring-[#FF2D20] dark:hover:text-white">Dusk</a>, <a href="https://laravel.com/docs/broadcasting" class="rounded-sm underline hover:text-black focus:outline-none focus-visible:ring-1 focus-visible:ring-[#FF2D20] dark:hover:text-white">Echo</a>, <a href="https://laravel.com/docs/horizon" class="rounded-sm underline hover:text-black focus:outline-none focus-visible:ring-1 focus-visible:ring-[#FF2D20] dark:hover:text-white">Horizon</a>, <a href="https://laravel.com/docs/sanctum" class="rounded-sm underline hover:text-black focus:outline-none focus-visible:ring-1 focus-visible:ring-[#FF2D20] dark:hover:text-white">Sanctum</a>, <a href="https://laravel.com/docs/telescope" class="rounded-sm underline hover:text-black focus:outline-none focus-visible:ring-1 focus-visible:ring-[#FF2D20] dark:hover:text-white">Telescope</a>, and more.
                                    </p>
                                </div>
                            </div>
                        </div>
                    </main>

                    <footer class="py-16 text-center text-sm text-black dark:text-white/70">
                        Laravel v{{ Illuminate\Foundation\Application::VERSION }} (PHP v{{ PHP_VERSION }})
                    </footer>
                </div>
            </div>
        </div>
    </body>
</html>

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/resources/views/user_list_of_offers.blade.php
Contents:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ZeroWasteWagon</title>
    @vite(['resources/css/app.css', 'resources/js/app.js'])
</head>

<body class="bg-gray-50">
    <header class="flex justify-between items-center p-6 bg-green-500 text-white">
        <h1 class="text-3xl">ZeroWasteWagon</h1>
        <div class="space-x-4 flex items-center">
            <a href="/about-us" class="hover:underline">About Us</a>
            <a href="/about-us" class="hover:underline">Log out</a>
        </div>
    </header>

    <div class="container mx-auto px-4 py-8">
        
    <div class="text-center">
    <h2 class="text-3xl mb-4 font-bold text-blue-600 relative">
        <span style="border-bottom: 3px solid #00FF00;">Current Offers</span>
    </h2>
</div>






        @foreach($data as $el)

        <div class="px-2 py-4 w-full flex justify-center">
            <div class="w-full bg-white shadow-md rounded-lg overflow-hidden">
                <div class="flex items-center justify-between py-4 px-6">
                    <div class="flex items-center">
                        <img src="{{ asset('storage/' . $el->image_path) }}" alt="Offer Image" class="w-40 h-40 object-cover">
                        <div class="ml-4">
                            <h1 class="font-bold">{{ $el->name }}</h1>
                            <div class="menu-item">
                                <h2>{{ $el->description }}</h2>
                                <p>Left only: {{ $el->quantity }}</p>
                                <p class="font-bold text-red-500">{{ $el->price }}€</p>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="flex justify-center py-4">
                    <button class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">
                        Add to Cart
                    </button>
                </div>
            </div>
        </div>


        @endforeach




    <!-- <footer class="text-center p-6 bg-gray-800 text-white"> -->
        <!-- © 2024 ZeroWasteWagon. All rights reserved. -->
    <!-- </footer> -->

    <script>
        document.getElementById('loginDropdown').addEventListener('click', function() {
            document.getElementById('dropdownContent').classList.toggle('hidden');
        });
    </script>
</body>
</html>

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/resources/views/order_history.blade.php
Contents:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="csrf-token" content="{{ csrf_token() }}">
    <title>User Order History</title>
    @vite(['resources/css/app.css', 'resources/js/app.js'])
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        .order-group {
            margin-bottom: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            overflow: hidden;
        }
        .order-date {
            background-color: #f8f8f8;
            padding: 15px;
            cursor: pointer;
            display: flex;
            justify-content: space-between;
            align-items: center;
            font-size: 1.1em;
            font-weight: bold;
        }
        .order-details {
            display: none;
            margin-top: 10px;
        }
        .order-summary {
            background-color: #e0e0e0;
            padding: 15px;
            margin-top: 10px;
            cursor: pointer;
            display: flex;
            justify-content: space-between;
            align-items: center;
            font-size: 1em;
            border-top: 1px solid #ccc;
        }
        .order-info {
            display: none;
            margin-top: 10px;
            padding: 15px;
            background-color: #f9f9f9;
            border: 1px solid #e0e0e0;
            border-radius: 8px;
            display: flex;
            justify-content: space-between;
            flex-wrap: wrap;
        }
        .order-info img {
            max-width: 150px;
            border-radius: 5px;
            margin-top: 10px;
        }
        .order-info p {
            margin: 5px 0;
        }
        .order-info-left,
        .order-info-right {
            width: 48%;
        }
        .order-info-right a {
            color: blue;
            text-decoration: underline;
        }
    </style>
</head>
<body class="bg-gray-100">
    <header class="flex justify-between items-center p-6 bg-green-500 text-white">
        <h1 class="text-3xl">Order History</h1>
        <a href="{{ route('dashboard') }}" class="hover:underline text-white">Home</a>
    </header>
    <div class="container mx-auto p-8">
        <div class="flex justify-between items-center mb-4">
            <h1 class="text-3xl font-bold text-green-700">Your Order History</h1>
            <a href="{{ route('dashboard') }}" class="bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded">Return to Dashboard</a>
        </div>
        <div>
            @if($orders->isNotEmpty())
                @php
                    $groupedOrders = $orders->groupBy(function($order) {
                        return \Carbon\Carbon::parse($order->created_at)->format('Y-m-d');
                    })->sortKeysDesc();
                @endphp
                @foreach ($groupedOrders as $date => $orders)
                    <div class="order-group">
                        <div class="order-date" onclick="toggleOrderDetails('{{ $date }}')">
                            <strong>{{ $date }}</strong>
                            <i class="fas fa-chevron-down"></i>
                        </div>
                        <div class="order-details" id="details-{{ $date }}">
                            @foreach ($orders as $order)
                                <div class="order-summary" onclick="toggleOrderInfo('{{ $order->id }}')">
                                    <span>{{ $order->offer->name }}</span>
                                    <i class="fas fa-chevron-down"></i>
                                </div>
                                <div class="order-info" id="info-{{ $order->id }}">
                                    <div class="order-info-left">
                                        <p><strong>Offer Name:</strong> {{ $order->offer->name }}</p>
                                        <p><strong>Quantity:</strong> {{ $order->quantity }}</p>
                                        <p><strong>Total Price:</strong> {{ number_format($order->offer->price * $order->quantity, 2) }}€</p>
                                        <p><strong>Offer Description:</strong> {{ $order->offer->description }}</p>
                                        <p><strong>Offer Image:</strong></p>
                                        <img src="{{ asset('storage/' . $order->offer->image_path) }}" alt="{{ $order->offer->name }}">
                                        <p><strong>Order Time:</strong> {{ \Carbon\Carbon::parse($order->created_at)->format('H:i:s') }}</p>
                                    </div>
                                    <div class="order-info-right">
                                        <p><strong>Venue Name:</strong> {{ $order->offer->partner->venue_name }}</p>
                                        <p><strong>Venue Address:</strong> <a href="https://www.google.com/maps/dir/?api=1&destination={{ urlencode($order->offer->partner->address) }}" target="_blank">Open in Google Maps: {{ $order->offer->partner->address }}</a></p>
                                        <div id="pickup-times-{{ $order->offer->partner->id }}-{{ $order->id }}" class="text-gray-600">Loading pickup times...</div>
                                    </div>
                                </div>
                            @endforeach
                        </div>
                    </div>
                @endforeach
            @else
                <div class="bg-blue-100 border border-blue-400 text-blue-700 px-4 py-3 rounded relative" role="alert">
                    You have no order history.
                </div>
            @endif
        </div>
    </div>
    <footer class="text-center p-6 bg-gray-800 text-white">
        © 2024 ZeroWasteWagon. All rights reserved.
    </footer>

    <script>
        function toggleOrderDetails(date) {
            var detailsElement = document.getElementById('details-' + date);
            var icon = detailsElement.previousElementSibling.querySelector('i');
            var isVisible = detailsElement.style.display === 'block';

            document.querySelectorAll('.order-details').forEach(function(element) {
                element.style.display = 'none';
            });
            document.querySelectorAll('.order-date i').forEach(function(iconElement) {
                iconElement.classList.remove('fa-chevron-up');
                iconElement.classList.add('fa-chevron-down');
            });

            if (!isVisible) {
                detailsElement.style.display = 'block';
                icon.classList.remove('fa-chevron-down');
                icon.classList.add('fa-chevron-up');
            }
        }

        function toggleOrderInfo(orderId) {
            var infoElement = document.getElementById('info-' + orderId);
            var icon = infoElement.previousElementSibling.querySelector('i');
            var isVisible = infoElement.style.display === 'block';

            document.querySelectorAll('.order-info').forEach(function(element) {
                element.style.display = 'none';
            });
            document.querySelectorAll('.order-summary i').forEach(function(iconElement) {
                iconElement.classList.remove('fa-chevron-up');
                iconElement.classList.add('fa-chevron-down');
            });

            if (!isVisible) {
                infoElement.style.display = 'block';
                icon.classList.remove('fa-chevron-down');
                icon.classList.add('fa-chevron-up');
            }
        }

        document.addEventListener('DOMContentLoaded', function() {
    fetchPickupTimesForOrders();
});

function fetchPickupTimesForOrders() {
    const csrfTokenElement = document.querySelector('meta[name="csrf-token"]');
    if (!csrfTokenElement) {
        console.error('CSRF token not found.');
        return;
    }
    const csrfToken = csrfTokenElement.getAttribute('content');

    fetch('/pickup-times-today', {
        headers: {
            'X-CSRF-TOKEN': csrfToken
        }
    })
    .then(response => response.json())
    .then(data => {
        data.forEach(pickupTime => {
            document.querySelectorAll(`[id^="pickup-times-${pickupTime.partner_id}"]`).forEach(element => {
                if (pickupTime.start_time && pickupTime.end_time) {
                    element.innerHTML = `Pickup Time: ${pickupTime.start_time} - ${pickupTime.end_time}`;
                } else {
                    element.innerHTML = 'Pickup Time: No pickups today';
                }
            });
        });

        document.querySelectorAll('[id^="pickup-times-"]').forEach(element => {
            if (element.innerHTML === 'Loading pickup times...') {
                element.innerHTML = 'Pickup Time: No pickups today';
            }
        });
    })
    .catch(error => {
        console.error('Error fetching pickup times:', error);
    });
}
    </script>
</body>
</html>

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/resources/views/success.blade.php
Contents:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Payment Success</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-4">
        <div class="alert alert-success">
            <h4>Payment Successful!</h4>
            <p>Thank you for your purchase. Your order is being processed.</p>
            <a href="{{ route('dashboard') }}" class="btn btn-primary">Return Home</a>
        </div>
    </div>
</body>
</html>

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/resources/views/partner_delete_offers.blade.php
Contents:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Delete Offer - Partner Dashboard</title>
    @vite(['resources/css/app.css', 'resources/js/app.js'])
</head>
<body class="bg-gray-100">
    <div class="container mx-auto p-8">
        <h1 class="text-2xl font-bold text-red-600 mb-4">Confirm Offer Deletion</h1>
        <p>Are you sure you want to delete this offer?</p>
        <form action="{{ route('offers.destroy', $offer->id) }}" method="POST">
            @csrf
            @method('DELETE')
            <button type="submit" class="bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded">Delete</button>
            <a href="{{ route('offers.index') }}" class="bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded">Cancel</a>
        </form>
    </div>

    <footer class="text-center p-6 bg-gray-800 text-white">
        © 2024 ZeroWasteWagon. All rights reserved.
    </footer>
</body>
</html>

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/resources/views/partner_list_offers.blade.php
Contents:

<!-- In resources/views/partner_list_offers.blade.php -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Partner Offers</title>
</head>
<body>
    <h1>Published Offers</h1>
    @foreach($publishedOffers as $offer)
        <div class="offer">
            <h3>{{ $offer->name }}</h3>
            <p>{{ $offer->description }}</p>
            <p>{{ $offer->price }}</p>
            <p>{{ $offer->quantity }}</p>
            <img src="{{ asset('storage/' . $offer->image_path) }}" alt="Offer Image">
            <a href="{{ route('offers.edit', $offer->id) }}">Edit</a>
            <form action="{{ route('offers.unpublish', $offer->id) }}" method="POST">
                @csrf
                <button type="submit">Unpublish</button>
            </form>
        </div>
    @endforeach

    <h1>Unpublished Offers</h1>
    @foreach($unpublishedOffers as $offer)
        <div class="offer">
            <h3>{{ $offer->name }}</h3>
            <p>{{ $offer->description }}</p>
            <p>{{ $offer->price }}</p>
            <img src="{{ asset('storage/' . $offer->image_path) }}" alt="Offer Image">
            <a href="{{ route('offers.edit', $offer->id) }}">Edit</a>
            <form action="{{ route('offers.publish', $offer->id) }}" method="POST">
                @csrf
                <input type="number" name="quantity" placeholder="Enter Quantity" required>
                <button type="submit">Publish</button>
            </form>
        </div>
    @endforeach
</body>
</html>

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/resources/views/cart.blade.php
Contents:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@lang('main.cart')</title>
    @vite(['resources/css/app.css', 'resources/js/app.js'])
    <script src="https://js.stripe.com/v3/"></script>
    <style>
        #timer {
            display: inline-block;
            font-size: 16px;
            color: #dc3545; /* Red color for urgency */
        }
        .tooltip-icon {
            cursor: help;
            color: #007bff; /* Bootstrap primary color */
        }
    </style>
</head>
<body class="bg-gray-50">
    <header class="flex justify-between items-center p-6 bg-green-500 text-white">

        <h1 class="text-3xl">Shopping Cart</h1>

        <a href="/" class="hover:underline text-white">Home</a>

        <h1 class="text-3xl">@lang('main.cart')</h1>
        <a href="{{ route('locale', 'lt') }}" class="hover:underline">Lietuvių</a>
        <a href="{{ route('locale', 'en') }}" class="hover:underline">English</a>
        <a href="{{ route('dashboard') }}" class="hover:underline text-white">@lang('main.home')</a>

    </header>

    <div class="container mx-auto mt-4 p-4 bg-white shadow-md rounded">
        @php $total = 0; @endphp
        @if(session('success'))
            <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative" role="alert">
                {{ session('success') }}
            </div>
        @endif
        @if($items->isNotEmpty())
            <div class="overflow-x-auto relative">
                <table class="w-full text-sm text-left text-gray-500">
                    <thead class="text-xs text-gray-700 uppercase bg-gray-50">
                        <tr>
                            <th scope="col" class="py-3 px-6">Product</th>
                            <th scope="col" class="py-3 px-6">Quantity</th>
                            <th scope="col" class="py-3 px-6">Price</th>
                            <th scope="col" class="py-3 px-6">Subtotal</th>
                            <th scope="col" class="py-3 px-6">
                                <span class="time-left-header" data-bs-toggle="tooltip" data-bs-placement="top" title="The item is active for 10 minutes or until you pay" style="cursor: pointer; text-decoration: underline; text-decoration-style: dotted;">
                                    Time Left
                                </span>
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach($items as $index => $item)
                            @php
                                $subtotal = $item['price'] * $item['quantity'];
                                $total += $subtotal;
                                $expiryTime = \Carbon\Carbon::createFromTimestamp($item['created_at'])->addMinutes(10)->timestamp;
                            @endphp
                            <tr class="bg-white border-b" id="item-{{ $item['id'] }}">
                                <td class="py-4 px-6">{{ $item['name'] }}</td>
                                <td class="py-4 px-6">{{ $item['quantity'] }}</td>
                                <td class="py-4 px-6">€{{ number_format($item['price'], 2) }}</td>
                                <td class="py-4 px-6">€{{ number_format($subtotal, 2) }}</td>
                                <td class="py-4 px-6"><div id="timer-{{ $item['id'] }}" data-expiry="{{ $expiryTime }}"></div></td>
                            </tr>
                        @endforeach
                        <tr class="bg-white border-b" id="total-row">
                            <td colspan="4" class="text-right py-4 px-6 font-medium">Total</td>
                            <td class="py-4 px-6 font-medium" id="total-amount">€{{ number_format($total, 2) }}</td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <div class="text-end mt-4" id="checkout-section">
                <button id="checkout-button" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">
                    Proceed to Checkout
                </button>
                <a href="/user/dashboard" class="bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded ml-2">
                    @lang('main.back')
                </a>
            </div>
        @else
            <div class="bg-blue-100 border border-blue-400 text-blue-700 px-4 py-3 rounded relative" role="alert">
                @lang('main.empty')
                <a href="/user/dashboard" class="bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded ml-2">
                    @lang('main.back')
                </a>
            </div>
        @endif
    </div>

    <script>
        var stripe = Stripe('{{ config('services.stripe.key') }}'); 
        var activeTimers = 0;

        document.getElementById('checkout-button').addEventListener('click', function(e) {
            e.preventDefault();
            fetch('{{ route("payment.create-checkout-session") }}', { 
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-TOKEN': '{{ csrf_token() }}'
                },
                body: JSON.stringify({ total: '{{ $total }}' })
            }).then(function(response) {
                return response.json();
            }).then(function(session) {
                return stripe.redirectToCheckout({ sessionId: session.id });
            }).catch(function(error) {
                console.error('Error:', error);
            });
        });

        document.addEventListener('DOMContentLoaded', function() {
            var timers = document.querySelectorAll('[id^="timer-"]');
            activeTimers = timers.length;
            timers.forEach(function(timerElement) {
                var expiryTime = timerElement.getAttribute('data-expiry') * 1000;
                initializeTimer(timerElement.id, expiryTime, timerElement.id.split('-')[1]);
            });
        });

        function initializeTimer(timerId, expiryTime, itemId) {
            var timer = document.getElementById(timerId);
            var x = setInterval(function() {
                var now = new Date().getTime();
                var distance = expiryTime - now;
                if (distance < 0) {
                    clearInterval(x);
                    timer.innerHTML = "EXPIRED";
                    removeExpiredItem(itemId); // Remove the item from the UI and the backend
                    activeTimers--;
                    location.reload(); // Refresh the page after each item expires
                } else {
                    var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
                    var seconds = Math.floor((distance % (1000 * 60)) / 1000);
                    timer.innerHTML = minutes + "m " + seconds + "s ";
                }
            }, 1000);
        }

        function removeExpiredItem(itemId) {
            fetch(`/cart/remove/${itemId}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-TOKEN': '{{ csrf_token() }}'
                },
            }).then(function(response) {
                if (response.ok) {
                    document.getElementById('item-' + itemId).remove();
                } else {
                    console.error('Failed to remove item from the backend.');
                }
            }).catch(function(error) {
                console.error('Error:', error);
            });
        }
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });
        }); 
    </script>
</body>
</html>

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/resources/css/app.css
Contents:
@tailwind base;
@tailwind components;
@tailwind utilities;

----------------------------------------
Filename: /var/www/zerowastewagon/example-app/routes/web.php
Contents:
<?php

use Illuminate\Support\Facades\Route;
use App\Http\Controllers\Auth\LoginController;
use App\Http\Controllers\Auth\RegisterController;
use App\Http\Controllers\PartnerController;
use App\Http\Controllers\FoodOfferController;
use App\Http\Controllers\GoogleTranslateController;
use App\Http\Controllers\Auth\PartnerAuthController;
use App\Http\Controllers\CartController;
use App\Http\Controllers\PaymentController;
use App\Http\Middleware\SetLocale;
use App\Http\Controllers\UserOrderController;
use App\Http\Controllers\UserController;




Route::get('locale/{locale}', [GoogleTranslateController::class, 'changeLocale']) -> name('locale'); 
Route::middleware([SetLocale::class]) -> group(function () {
// Route for landing page
Route::get('/', function () {
    return view('landing');
});


// Routes for User registration

Route::get('/register', [RegisterController::class, 'create'])->name('register');
Route::post('/register', [RegisterController::class, 'store']);

Route::get('/user/login', [LoginController::class, 'create'])->name('login');

Route::post('/user/login', [LoginController::class, 'store']);


// Route::view('/user/dashboard', 'user_dashboard')->middleware('auth')->name('dashboard');
Route::middleware(['auth:web'])->group(function () {
    Route::get('/user/dashboard', [LoginController::class, 'finish'])->name('dashboard');
});
// Route::get('/user/dashboard', [LoginController::class, 'finish'])->name('dashboard');



Route::middleware(['auth:web'])->group(function () {
    Route::get('/user/list_of_offers', [FoodOfferController::class, 'allData'])->name('offers.list');
});

Route::middleware(['auth:web'])->group(function () {
    Route::get('/user/list_of_venues', [FoodOfferController::class, 'venuesList'])->name('venues.list');
});

Route::middleware(['auth:web'])->group(function () {
    Route::get('/user/smth', [FoodOfferController::class, 'getFoodOffersByPartner'])->name('smth');
});


Route::get('/partner-registration-step1', function() {
    return view('step1-partner-registration'); 
})->name('partner.registration.step1');

// POST routes for handling form submissions at each step, now with names added
Route::post('/partner-registration-step1', [PartnerController::class, 'validateInvitation'])->name('partner.registration.step1.post');
Route::get('/partner-registration-step2', [PartnerController::class, 'showStep2Form'])->name('partner.registration.step2');
Route::post('/partner-registration-step2', [PartnerController::class, 'registerStep2'])->name('partner.registration.step2.post');
Route::get('/partner-registration-step3', [PartnerController::class, 'showStep3Form'])->name('partner.registration.step3');
Route::post('/partner-registration-step3', [PartnerController::class, 'registerStep3'])->name('partner.registration.step3.post');





// Partner login form route
Route::get('/partner/login', [PartnerAuthController::class, 'showLoginForm'])->name('partner.login.form');
// Partner authenticate route
Route::post('/partner/login', [PartnerAuthController::class, 'login'])->name('partner.login');
//Partner doasboard route
Route::middleware(['auth:partner'])->group(function () {
    Route::get('/partner/dashboard', function () {
        return view('partner_dashboard'); 
    })->name('partner.dashboard');
});
// Partner offer creation and authentication route
Route::middleware(['auth:partner'])->group(function () {
    Route::get('/partner/offer/create', [FoodOfferController::class, 'create'])->name('offers.create');
    Route::post('/partner/offer/store', [FoodOfferController::class, 'store'])->name('offers.store');
// Routes for managing offers
Route::get('/partner/offers', [FoodOfferController::class, 'index'])->name('offers.index');
Route::get('/partner/offers/{offer}/edit', [FoodOfferController::class, 'edit'])->name('offers.edit');
Route::put('/partner/offers/{offer}', [FoodOfferController::class, 'update'])->name('offers.update');
Route::delete('/partner/offers/{offer}', [FoodOfferController::class, 'destroy'])->name('offers.destroy');

});

// Route::name('user.')->group(function(){

// });

Route::middleware(['auth:web'])->group(function () {
    Route::get('/user/dashboard', [FoodOfferController::class, 'dashboard'])->name('dashboard');
});

//this it the add to cart route


Route::post('/user/add-to-cart', [CartController::class, 'addToCart'])->middleware('auth');
//Route::get('/cart', [CartController::class, 'showCart'])->name('cart.show');
Route::get('/cart', [CartController::class, 'showCart'])->name('cart.show')->middleware('auth');


Route::post('/create-intent', [PaymentController::class, 'createIntent'])->name('create.intent');
Route::post('/confirm-payment', [PaymentController::class, 'confirmPayment'])->name('confirm.payment');
Route::post('/handle-payment', [PaymentController::class, 'handlePayment'])->name('handle.payment');


Route::get('/payment/checkout', [PaymentController::class, 'createCheckoutSession'])->name('payment.checkout');
Route::get('/payment/success', [PaymentController::class, 'success'])->name('payment.success');
Route::get('/payment/cancel', [PaymentController::class, 'cancel'])->name('payment.cancel');
Route::post('/payment/create-checkout-session', [PaymentController::class, 'createCheckoutSession'])->name('payment.create-checkout-session');




Route::get('/partner/orders', [PartnerController::class, 'viewOrders'])->name('partner.orders')->middleware('auth:partner');





Route::get('/offers/latest', [FoodOfferController::class, 'getLatestOffers'])->name('offers.latest');

Route::delete('/cart/remove/{id}', [CartController::class, 'removeFromCart']);

Route::get('/user/order-history', [UserOrderController::class, 'index'])->name('user.order-history')->middleware('auth');
//routes for user account info
Route::middleware(['auth:web'])->group(function () {
Route::get('/user/account', [UserController::class, 'account'])->name('user.account');
Route::post('/user/account/update-password', [UserController::class, 'updatePassword'])->name('user.update-password');
});

//routes for partner account info
Route::middleware(['auth:partner'])->group(function () {
    Route::get('/partner/account', [PartnerController::class, 'account'])->name('partner.account');
    Route::post('/partner/account/update-password', [PartnerController::class, 'updatePassword'])->name('partner.update-password');
    Route::post('/partner/account/update-info', [PartnerController::class, 'updateAccountInfo'])->name('partner.update-account-info');
});


Route::middleware(['auth:partner'])->group(function () {
    Route::get('/partner/account', [PartnerController::class, 'account'])->name('partner.account');
    Route::post('/partner/account/update-pickup-times', [PartnerController::class, 'updatePickupTimes'])->name('partner.update-pickup-times');
});
//route for users being able to see pickup times
Route::get('/pickup-times-today', [PartnerController::class, 'getPickupTimesForToday']);

//new routes for ability to pubish and unpublish offer  for partners
Route::middleware(['auth:partner'])->group(function () {
    Route::get('offers', [FoodOfferController::class, 'index'])->name('offers.index');
    Route::post('offers/{offer}/unpublish', [FoodOfferController::class, 'unpublish'])->name('offers.unpublish');
    Route::post('offers/{offer}/publish', [FoodOfferController::class, 'publish'])->name('offers.publish');
    Route::get('offers/{offer}/edit', [FoodOfferController::class, 'edit'])->name('offers.edit');
    Route::put('offers/{offer}', [FoodOfferController::class, 'update'])->name('offers.update');
});

    // Google Translate routes
    // Route::get('google/translate',[GoogleTranslateController::class,'googleTranslate'])->name('google.translate');
    // Route::get('google/translate/change',[GoogleTranslateController::class,'googleTranslateChange'])->name('google.translate.change');
});





----------------------------------------
Filename: /var/www/zerowastewagon/example-app/routes/console.php
Contents:
<?php

use Illuminate\Foundation\Inspiring;
use Illuminate\Support\Facades\Artisan;

Artisan::command('inspire', function () {
    $this->comment(Inspiring::quote());
})->purpose('Display an inspiring quote')->hourly();

----------------------------------------
